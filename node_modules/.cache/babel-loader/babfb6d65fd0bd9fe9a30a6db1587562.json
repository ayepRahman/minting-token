{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { useClickable } from \"@chakra-ui/clickable\";\nimport { createDescendantContext } from \"@chakra-ui/descendant\";\nimport { useControllableState, useDisclosure, useFocusOnHide, useId, useIds, useOutsideClick, useShortcut, useUnmountEffect, useUpdateEffect } from \"@chakra-ui/hooks\";\nimport { usePopper } from \"@chakra-ui/popper\";\nimport { createContext, getValidChildren, mergeRefs } from \"@chakra-ui/react-utils\";\nimport { addItem, callAllHandlers, dataAttr, determineLazyBehavior, focus, getNextItemFromSearch, getOwnerDocument, isActiveElement, isArray, isString, normalizeEventKey, removeItem } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n/* -------------------------------------------------------------------------------------------------\n * Create context to track descendants and their indices\n * -----------------------------------------------------------------------------------------------*/\n\nexport var [MenuDescendantsProvider, useMenuDescendantsContext, useMenuDescendants, useMenuDescendant] = createDescendantContext();\n/* -------------------------------------------------------------------------------------------------\n * Create context to track menu state and logic\n * -----------------------------------------------------------------------------------------------*/\n\nexport var [MenuProvider, useMenuContext] = createContext({\n  strict: false,\n  name: \"MenuContext\"\n});\n/* -------------------------------------------------------------------------------------------------\n * useMenu hook\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * React Hook to manage a menu\n *\n * It provides the logic and will be used with react context\n * to propagate its return value to all children\n */\n\nexport function useMenu(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var {\n    id,\n    closeOnSelect = true,\n    closeOnBlur = true,\n    autoSelect = true,\n    isLazy,\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onClose: onCloseProp,\n    onOpen: onOpenProp,\n    placement = \"bottom-start\",\n    lazyBehavior = \"unmount\"\n  } = props,\n      popperProps = _objectWithoutPropertiesLoose(props, [\"id\", \"closeOnSelect\", \"closeOnBlur\", \"autoSelect\", \"isLazy\", \"isOpen\", \"defaultIsOpen\", \"onClose\", \"onOpen\", \"placement\", \"lazyBehavior\"]);\n\n  var {\n    isOpen,\n    onOpen,\n    onClose,\n    onToggle\n  } = useDisclosure({\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onClose: onCloseProp,\n    onOpen: onOpenProp\n  });\n  /**\n   * Prepare the reference to the menu and disclosure\n   */\n\n  var menuRef = React.useRef(null);\n  var buttonRef = React.useRef(null);\n  useOutsideClick({\n    ref: menuRef,\n    handler: event => {\n      var _buttonRef$current;\n\n      if (isOpen && closeOnBlur && !((_buttonRef$current = buttonRef.current) != null && _buttonRef$current.contains(event.target))) {\n        onClose();\n      }\n    }\n  });\n  /**\n   * Add some popper.js for dynamic positioning\n   */\n\n  var popper = usePopper(_extends({}, popperProps, {\n    enabled: isOpen,\n    placement\n  }));\n  var [focusedIndex, setFocusedIndex] = React.useState(-1);\n  /**\n   * Context to register all menu item nodes\n   */\n\n  var descendants = useMenuDescendants();\n  /**\n   * Focus the button when we close the menu\n   */\n\n  useUpdateEffect(() => {\n    if (!isOpen) {\n      setFocusedIndex(-1);\n    }\n  }, [isOpen]);\n  useFocusOnHide(menuRef, {\n    focusRef: buttonRef,\n    visible: isOpen,\n    shouldFocus: true\n  });\n  /**\n   * Generate unique ids for menu's list and button\n   */\n\n  var [buttonId, menuId] = useIds(id, \"menu-button\", \"menu-list\");\n  var openAndFocusMenu = React.useCallback(() => {\n    onOpen();\n    focus(menuRef.current, {\n      nextTick: true,\n      selectTextIfInput: false\n    });\n  }, [onOpen, menuRef]);\n  var timeoutIds = React.useRef(new Set([]));\n  useUnmountEffect(() => {\n    timeoutIds.current.forEach(id => clearTimeout(id));\n    timeoutIds.current.clear();\n  });\n  var openAndFocusFirstItem = React.useCallback(() => {\n    onOpen();\n    var id = setTimeout(() => {\n      var first = descendants.firstEnabled();\n      if (first) setFocusedIndex(first.index);\n    });\n    timeoutIds.current.add(id);\n  }, [onOpen, setFocusedIndex, descendants]);\n  var openAndFocusLastItem = React.useCallback(() => {\n    onOpen();\n    var id = setTimeout(() => {\n      var last = descendants.lastEnabled();\n      if (last) setFocusedIndex(last.index);\n    });\n    timeoutIds.current.add(id);\n  }, [onOpen, setFocusedIndex, descendants]);\n  var refocus = React.useCallback(() => {\n    var _menuRef$current, _descendants$item;\n\n    var doc = getOwnerDocument(menuRef.current);\n    var hasFocusWithin = (_menuRef$current = menuRef.current) == null ? void 0 : _menuRef$current.contains(doc.activeElement);\n    var shouldRefocus = isOpen && !hasFocusWithin;\n    if (!shouldRefocus) return;\n    var node = (_descendants$item = descendants.item(focusedIndex)) == null ? void 0 : _descendants$item.node;\n\n    if (node) {\n      focus(node, {\n        selectTextIfInput: false\n      });\n    }\n  }, [isOpen, focusedIndex, descendants]);\n  return {\n    openAndFocusMenu,\n    openAndFocusFirstItem,\n    openAndFocusLastItem,\n    onTransitionEnd: refocus,\n    descendants,\n    popper,\n    buttonId,\n    menuId,\n    forceUpdate: popper.forceUpdate,\n    orientation: \"vertical\",\n    isOpen,\n    onToggle,\n    onOpen,\n    onClose,\n    menuRef,\n    buttonRef,\n    focusedIndex,\n    closeOnSelect,\n    closeOnBlur,\n    autoSelect,\n    setFocusedIndex,\n    isLazy,\n    lazyBehavior\n  };\n}\n/**\n * React Hook to manage a menu button.\n *\n * The assumption here is that the `useMenu` hook is used\n * in a component higher up the tree, and its return value\n * is passed as `context` to this hook.\n */\n\nexport function useMenuButton(props, externalRef) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  if (externalRef === void 0) {\n    externalRef = null;\n  }\n\n  var menu = useMenuContext();\n  var {\n    isOpen,\n    onClose,\n    autoSelect,\n    popper,\n    openAndFocusFirstItem,\n    openAndFocusLastItem,\n    openAndFocusMenu\n  } = menu;\n  var onClick = React.useCallback(() => {\n    if (isOpen) {\n      onClose();\n    } else {\n      var action = autoSelect ? openAndFocusFirstItem : openAndFocusMenu;\n      action();\n    }\n  }, [autoSelect, isOpen, onClose, openAndFocusFirstItem, openAndFocusMenu]);\n  var onKeyDown = React.useCallback(event => {\n    var eventKey = normalizeEventKey(event);\n    var keyMap = {\n      Enter: openAndFocusFirstItem,\n      ArrowDown: openAndFocusFirstItem,\n      ArrowUp: openAndFocusLastItem\n    };\n    var action = keyMap[eventKey];\n\n    if (action) {\n      event.preventDefault();\n      event.stopPropagation();\n      action(event);\n    }\n  }, [openAndFocusFirstItem, openAndFocusLastItem]);\n  return _extends({}, props, {\n    ref: mergeRefs(menu.buttonRef, externalRef, popper.referenceRef),\n    id: menu.buttonId,\n    \"data-active\": dataAttr(menu.isOpen),\n    \"aria-expanded\": menu.isOpen,\n    \"aria-haspopup\": \"menu\",\n    \"aria-controls\": menu.menuId,\n    onClick: callAllHandlers(props.onClick, onClick),\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown)\n  });\n}\n\nfunction isTargetMenuItem(event) {\n  var _target$getAttribute;\n\n  var target = event.target; // this will catch `menuitem`, `menuitemradio`, `menuitemcheckbox`\n\n  return !!((_target$getAttribute = target.getAttribute(\"role\")) != null && _target$getAttribute.startsWith(\"menuitem\"));\n}\n/* -------------------------------------------------------------------------------------------------\n * useMenuList\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * React Hook to manage a menu list.\n *\n * The assumption here is that the `useMenu` hook is used\n * in a component higher up the tree, and its return value\n * is passed as `context` to this hook.\n */\n\n\nexport function useMenuList(props, ref) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  if (ref === void 0) {\n    ref = null;\n  }\n\n  var menu = useMenuContext();\n\n  if (!menu) {\n    throw new Error(\"useMenuContext: context is undefined. Seems you forgot to wrap component within <Menu>\");\n  }\n\n  var {\n    focusedIndex,\n    setFocusedIndex,\n    menuRef,\n    isOpen,\n    onClose,\n    menuId,\n    isLazy,\n    lazyBehavior\n  } = menu;\n  var descendants = useMenuDescendantsContext();\n  /**\n   * Hook that creates a keydown event handler that listens\n   * to printable keyboard character press\n   */\n\n  var createTypeaheadHandler = useShortcut({\n    preventDefault: event => event.key !== \" \" && isTargetMenuItem(event)\n  });\n  var onKeyDown = React.useCallback(event => {\n    var eventKey = normalizeEventKey(event);\n    var keyMap = {\n      Tab: event => event.preventDefault(),\n      Escape: onClose,\n      ArrowDown: () => {\n        var next = descendants.nextEnabled(focusedIndex);\n        if (next) setFocusedIndex(next.index);\n      },\n      ArrowUp: () => {\n        var prev = descendants.prevEnabled(focusedIndex);\n        if (prev) setFocusedIndex(prev.index);\n      }\n    };\n    var fn = keyMap[eventKey];\n\n    if (fn) {\n      event.preventDefault();\n      fn(event);\n      return;\n    }\n    /**\n     * Typeahead: Based on current character pressed,\n     * find the next item to be selected\n     */\n\n\n    var onTypeahead = createTypeaheadHandler(character => {\n      var nextItem = getNextItemFromSearch(descendants.values(), character, item => {\n        var _item$node$textConten, _item$node;\n\n        return (_item$node$textConten = item == null ? void 0 : (_item$node = item.node) == null ? void 0 : _item$node.textContent) != null ? _item$node$textConten : \"\";\n      }, descendants.item(focusedIndex));\n\n      if (nextItem) {\n        var index = descendants.indexOf(nextItem.node);\n        setFocusedIndex(index);\n      }\n    });\n\n    if (isTargetMenuItem(event)) {\n      onTypeahead(event);\n    }\n  }, [descendants, focusedIndex, createTypeaheadHandler, onClose, setFocusedIndex]);\n  var hasBeenOpened = React.useRef(false);\n\n  if (isOpen) {\n    hasBeenOpened.current = true;\n  }\n\n  var shouldRenderChildren = determineLazyBehavior({\n    hasBeenSelected: hasBeenOpened.current,\n    isLazy,\n    lazyBehavior,\n    isSelected: isOpen\n  });\n  return _extends({}, props, {\n    ref: mergeRefs(menuRef, ref),\n    children: shouldRenderChildren ? props.children : null,\n    tabIndex: -1,\n    role: \"menu\",\n    id: menuId,\n    style: _extends({}, props.style, {\n      transformOrigin: \"var(--popper-transform-origin)\"\n    }),\n    \"aria-orientation\": \"vertical\",\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown)\n  });\n}\n/* -------------------------------------------------------------------------------------------------\n * useMenuPosition: Composes usePopper to position the menu\n * -----------------------------------------------------------------------------------------------*/\n\nexport function useMenuPositioner(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var {\n    popper,\n    isOpen\n  } = useMenuContext();\n  return popper.getPopperProps(_extends({}, props, {\n    style: _extends({\n      visibility: isOpen ? \"visible\" : \"hidden\"\n    }, props.style)\n  }));\n}\n/* -------------------------------------------------------------------------------------------------\n * useMenuItem: Hook for each menu item within the menu list.\n   We also use it in `useMenuItemOption`\n * -----------------------------------------------------------------------------------------------*/\n\nexport function useMenuItem(props, externalRef) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  if (externalRef === void 0) {\n    externalRef = null;\n  }\n\n  var {\n    onMouseEnter: onMouseEnterProp,\n    onMouseMove: onMouseMoveProp,\n    onMouseLeave: onMouseLeaveProp,\n    onClick: onClickProp,\n    isDisabled,\n    isFocusable,\n    closeOnSelect\n  } = props,\n      htmlProps = _objectWithoutPropertiesLoose(props, [\"onMouseEnter\", \"onMouseMove\", \"onMouseLeave\", \"onClick\", \"isDisabled\", \"isFocusable\", \"closeOnSelect\"]);\n\n  var menu = useMenuContext();\n  var {\n    setFocusedIndex,\n    focusedIndex,\n    closeOnSelect: menuCloseOnSelect,\n    onClose,\n    menuRef,\n    isOpen,\n    menuId\n  } = menu;\n  var ref = React.useRef(null);\n  var id = menuId + \"-menuitem-\" + useId();\n  /**\n   * Register the menuitem's node into the domContext\n   */\n\n  var {\n    index,\n    register\n  } = useMenuDescendant({\n    disabled: isDisabled && !isFocusable\n  });\n  var onMouseEnter = React.useCallback(event => {\n    onMouseEnterProp == null ? void 0 : onMouseEnterProp(event);\n    if (isDisabled) return;\n    setFocusedIndex(index);\n  }, [setFocusedIndex, index, isDisabled, onMouseEnterProp]);\n  var onMouseMove = React.useCallback(event => {\n    onMouseMoveProp == null ? void 0 : onMouseMoveProp(event);\n\n    if (ref.current && !isActiveElement(ref.current)) {\n      onMouseEnter(event);\n    }\n  }, [onMouseEnter, onMouseMoveProp]);\n  var onMouseLeave = React.useCallback(event => {\n    onMouseLeaveProp == null ? void 0 : onMouseLeaveProp(event);\n    if (isDisabled) return;\n    setFocusedIndex(-1);\n  }, [setFocusedIndex, isDisabled, onMouseLeaveProp]);\n  var onClick = React.useCallback(event => {\n    onClickProp == null ? void 0 : onClickProp(event);\n    if (!isTargetMenuItem(event)) return;\n    /**\n     * Close menu and parent menus, allowing the MenuItem\n     * to override its parent menu's `closeOnSelect` prop.\n     */\n\n    if (closeOnSelect != null ? closeOnSelect : menuCloseOnSelect) {\n      onClose();\n    }\n  }, [onClose, onClickProp, menuCloseOnSelect, closeOnSelect]);\n  var isFocused = index === focusedIndex;\n  var trulyDisabled = isDisabled && !isFocusable;\n  useUpdateEffect(() => {\n    if (!isOpen) return;\n\n    if (isFocused && !trulyDisabled && ref.current) {\n      focus(ref.current, {\n        nextTick: true,\n        selectTextIfInput: false\n      });\n    } else if (menuRef.current && !isActiveElement(menuRef.current)) {\n      focus(menuRef.current);\n    }\n  }, [isFocused, trulyDisabled, menuRef, isOpen]);\n  var clickableProps = useClickable({\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    ref: mergeRefs(register, ref, externalRef),\n    isDisabled,\n    isFocusable\n  });\n  return _extends({}, htmlProps, clickableProps, {\n    id,\n    role: \"menuitem\",\n    tabIndex: isFocused ? 0 : -1\n  });\n}\n/* -------------------------------------------------------------------------------------------------\n * useMenuOption: Composes useMenuItem to provide a selectable/checkable menu item\n * -----------------------------------------------------------------------------------------------*/\n\nexport function useMenuOption(props, ref) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  if (ref === void 0) {\n    ref = null;\n  }\n\n  var {\n    type = \"radio\",\n    isChecked\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"type\", \"isChecked\"]);\n\n  var ownProps = useMenuItem(rest, ref);\n  return _extends({}, ownProps, {\n    role: \"menuitem\" + type,\n    \"aria-checked\": isChecked\n  });\n}\n/* -------------------------------------------------------------------------------------------------\n * useMenuOptionGroup: Manages the state of multiple selectable menuitem or menu option\n * -----------------------------------------------------------------------------------------------*/\n\nexport function useMenuOptionGroup(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var {\n    children,\n    type = \"radio\",\n    value: valueProp,\n    defaultValue,\n    onChange: onChangeProp\n  } = props,\n      htmlProps = _objectWithoutPropertiesLoose(props, [\"children\", \"type\", \"value\", \"defaultValue\", \"onChange\"]);\n\n  var isRadio = type === \"radio\";\n  var fallback = isRadio ? \"\" : [];\n  var [value, setValue] = useControllableState({\n    defaultValue: defaultValue != null ? defaultValue : fallback,\n    value: valueProp,\n    onChange: onChangeProp\n  });\n  var onChange = React.useCallback(selectedValue => {\n    if (type === \"radio\" && isString(value)) {\n      setValue(selectedValue);\n    }\n\n    if (type === \"checkbox\" && isArray(value)) {\n      var nextValue = value.includes(selectedValue) ? removeItem(value, selectedValue) : addItem(value, selectedValue);\n      setValue(nextValue);\n    }\n  }, [value, setValue, type]);\n  var validChildren = getValidChildren(children);\n  var clones = validChildren.map(child => {\n    /**\n     * We've added an internal `id` to each `MenuItemOption`,\n     * let's use that for type-checking.\n     *\n     * We can't rely on displayName or the element's type since\n     * they can be changed by the user.\n     */\n    if (child.type.id !== \"MenuItemOption\") return child;\n\n    var onClick = event => {\n      onChange(child.props.value);\n      child.props.onClick == null ? void 0 : child.props.onClick(event);\n    };\n\n    var isChecked = type === \"radio\" ? child.props.value === value : value.includes(child.props.value);\n    return /*#__PURE__*/React.cloneElement(child, {\n      type,\n      onClick,\n      isChecked\n    });\n  });\n  return _extends({}, htmlProps, {\n    children: clones\n  });\n}\nexport function useMenuState() {\n  var {\n    isOpen,\n    onClose\n  } = useMenuContext();\n  return {\n    isOpen,\n    onClose\n  };\n}","map":{"version":3,"sources":["/Users/arifrahman/Code/personal/minting-token/client/node_modules/@chakra-ui/menu/dist/esm/use-menu.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","useClickable","createDescendantContext","useControllableState","useDisclosure","useFocusOnHide","useId","useIds","useOutsideClick","useShortcut","useUnmountEffect","useUpdateEffect","usePopper","createContext","getValidChildren","mergeRefs","addItem","callAllHandlers","dataAttr","determineLazyBehavior","focus","getNextItemFromSearch","getOwnerDocument","isActiveElement","isArray","isString","normalizeEventKey","removeItem","React","MenuDescendantsProvider","useMenuDescendantsContext","useMenuDescendants","useMenuDescendant","MenuProvider","useMenuContext","strict","name","useMenu","props","id","closeOnSelect","closeOnBlur","autoSelect","isLazy","isOpen","isOpenProp","defaultIsOpen","onClose","onCloseProp","onOpen","onOpenProp","placement","lazyBehavior","popperProps","onToggle","menuRef","useRef","buttonRef","ref","handler","event","_buttonRef$current","current","contains","popper","enabled","focusedIndex","setFocusedIndex","useState","descendants","focusRef","visible","shouldFocus","buttonId","menuId","openAndFocusMenu","useCallback","nextTick","selectTextIfInput","timeoutIds","Set","forEach","clearTimeout","clear","openAndFocusFirstItem","setTimeout","first","firstEnabled","index","add","openAndFocusLastItem","last","lastEnabled","refocus","_menuRef$current","_descendants$item","doc","hasFocusWithin","activeElement","shouldRefocus","node","item","onTransitionEnd","forceUpdate","orientation","useMenuButton","externalRef","menu","onClick","action","onKeyDown","eventKey","keyMap","Enter","ArrowDown","ArrowUp","preventDefault","stopPropagation","referenceRef","isTargetMenuItem","_target$getAttribute","getAttribute","startsWith","useMenuList","Error","createTypeaheadHandler","Tab","Escape","next","nextEnabled","prev","prevEnabled","fn","onTypeahead","character","nextItem","values","_item$node$textConten","_item$node","textContent","hasBeenOpened","shouldRenderChildren","hasBeenSelected","isSelected","children","tabIndex","role","style","transformOrigin","useMenuPositioner","getPopperProps","visibility","useMenuItem","onMouseEnter","onMouseEnterProp","onMouseMove","onMouseMoveProp","onMouseLeave","onMouseLeaveProp","onClickProp","isDisabled","isFocusable","htmlProps","menuCloseOnSelect","register","disabled","isFocused","trulyDisabled","clickableProps","useMenuOption","type","isChecked","rest","ownProps","useMenuOptionGroup","value","valueProp","defaultValue","onChange","onChangeProp","isRadio","fallback","setValue","selectedValue","nextValue","includes","validChildren","clones","map","child","cloneElement","useMenuState"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useClickable } from \"@chakra-ui/clickable\";\nimport { createDescendantContext } from \"@chakra-ui/descendant\";\nimport { useControllableState, useDisclosure, useFocusOnHide, useId, useIds, useOutsideClick, useShortcut, useUnmountEffect, useUpdateEffect } from \"@chakra-ui/hooks\";\nimport { usePopper } from \"@chakra-ui/popper\";\nimport { createContext, getValidChildren, mergeRefs } from \"@chakra-ui/react-utils\";\nimport { addItem, callAllHandlers, dataAttr, determineLazyBehavior, focus, getNextItemFromSearch, getOwnerDocument, isActiveElement, isArray, isString, normalizeEventKey, removeItem } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n/* -------------------------------------------------------------------------------------------------\n * Create context to track descendants and their indices\n * -----------------------------------------------------------------------------------------------*/\n\nexport var [MenuDescendantsProvider, useMenuDescendantsContext, useMenuDescendants, useMenuDescendant] = createDescendantContext();\n/* -------------------------------------------------------------------------------------------------\n * Create context to track menu state and logic\n * -----------------------------------------------------------------------------------------------*/\n\nexport var [MenuProvider, useMenuContext] = createContext({\n  strict: false,\n  name: \"MenuContext\"\n});\n/* -------------------------------------------------------------------------------------------------\n * useMenu hook\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * React Hook to manage a menu\n *\n * It provides the logic and will be used with react context\n * to propagate its return value to all children\n */\nexport function useMenu(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var {\n    id,\n    closeOnSelect = true,\n    closeOnBlur = true,\n    autoSelect = true,\n    isLazy,\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onClose: onCloseProp,\n    onOpen: onOpenProp,\n    placement = \"bottom-start\",\n    lazyBehavior = \"unmount\"\n  } = props,\n      popperProps = _objectWithoutPropertiesLoose(props, [\"id\", \"closeOnSelect\", \"closeOnBlur\", \"autoSelect\", \"isLazy\", \"isOpen\", \"defaultIsOpen\", \"onClose\", \"onOpen\", \"placement\", \"lazyBehavior\"]);\n\n  var {\n    isOpen,\n    onOpen,\n    onClose,\n    onToggle\n  } = useDisclosure({\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onClose: onCloseProp,\n    onOpen: onOpenProp\n  });\n  /**\n   * Prepare the reference to the menu and disclosure\n   */\n\n  var menuRef = React.useRef(null);\n  var buttonRef = React.useRef(null);\n  useOutsideClick({\n    ref: menuRef,\n    handler: event => {\n      var _buttonRef$current;\n\n      if (isOpen && closeOnBlur && !((_buttonRef$current = buttonRef.current) != null && _buttonRef$current.contains(event.target))) {\n        onClose();\n      }\n    }\n  });\n  /**\n   * Add some popper.js for dynamic positioning\n   */\n\n  var popper = usePopper(_extends({}, popperProps, {\n    enabled: isOpen,\n    placement\n  }));\n  var [focusedIndex, setFocusedIndex] = React.useState(-1);\n  /**\n   * Context to register all menu item nodes\n   */\n\n  var descendants = useMenuDescendants();\n  /**\n   * Focus the button when we close the menu\n   */\n\n  useUpdateEffect(() => {\n    if (!isOpen) {\n      setFocusedIndex(-1);\n    }\n  }, [isOpen]);\n  useFocusOnHide(menuRef, {\n    focusRef: buttonRef,\n    visible: isOpen,\n    shouldFocus: true\n  });\n  /**\n   * Generate unique ids for menu's list and button\n   */\n\n  var [buttonId, menuId] = useIds(id, \"menu-button\", \"menu-list\");\n  var openAndFocusMenu = React.useCallback(() => {\n    onOpen();\n    focus(menuRef.current, {\n      nextTick: true,\n      selectTextIfInput: false\n    });\n  }, [onOpen, menuRef]);\n  var timeoutIds = React.useRef(new Set([]));\n  useUnmountEffect(() => {\n    timeoutIds.current.forEach(id => clearTimeout(id));\n    timeoutIds.current.clear();\n  });\n  var openAndFocusFirstItem = React.useCallback(() => {\n    onOpen();\n    var id = setTimeout(() => {\n      var first = descendants.firstEnabled();\n      if (first) setFocusedIndex(first.index);\n    });\n    timeoutIds.current.add(id);\n  }, [onOpen, setFocusedIndex, descendants]);\n  var openAndFocusLastItem = React.useCallback(() => {\n    onOpen();\n    var id = setTimeout(() => {\n      var last = descendants.lastEnabled();\n      if (last) setFocusedIndex(last.index);\n    });\n    timeoutIds.current.add(id);\n  }, [onOpen, setFocusedIndex, descendants]);\n  var refocus = React.useCallback(() => {\n    var _menuRef$current, _descendants$item;\n\n    var doc = getOwnerDocument(menuRef.current);\n    var hasFocusWithin = (_menuRef$current = menuRef.current) == null ? void 0 : _menuRef$current.contains(doc.activeElement);\n    var shouldRefocus = isOpen && !hasFocusWithin;\n    if (!shouldRefocus) return;\n    var node = (_descendants$item = descendants.item(focusedIndex)) == null ? void 0 : _descendants$item.node;\n\n    if (node) {\n      focus(node, {\n        selectTextIfInput: false\n      });\n    }\n  }, [isOpen, focusedIndex, descendants]);\n  return {\n    openAndFocusMenu,\n    openAndFocusFirstItem,\n    openAndFocusLastItem,\n    onTransitionEnd: refocus,\n    descendants,\n    popper,\n    buttonId,\n    menuId,\n    forceUpdate: popper.forceUpdate,\n    orientation: \"vertical\",\n    isOpen,\n    onToggle,\n    onOpen,\n    onClose,\n    menuRef,\n    buttonRef,\n    focusedIndex,\n    closeOnSelect,\n    closeOnBlur,\n    autoSelect,\n    setFocusedIndex,\n    isLazy,\n    lazyBehavior\n  };\n}\n\n/**\n * React Hook to manage a menu button.\n *\n * The assumption here is that the `useMenu` hook is used\n * in a component higher up the tree, and its return value\n * is passed as `context` to this hook.\n */\nexport function useMenuButton(props, externalRef) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  if (externalRef === void 0) {\n    externalRef = null;\n  }\n\n  var menu = useMenuContext();\n  var {\n    isOpen,\n    onClose,\n    autoSelect,\n    popper,\n    openAndFocusFirstItem,\n    openAndFocusLastItem,\n    openAndFocusMenu\n  } = menu;\n  var onClick = React.useCallback(() => {\n    if (isOpen) {\n      onClose();\n    } else {\n      var action = autoSelect ? openAndFocusFirstItem : openAndFocusMenu;\n      action();\n    }\n  }, [autoSelect, isOpen, onClose, openAndFocusFirstItem, openAndFocusMenu]);\n  var onKeyDown = React.useCallback(event => {\n    var eventKey = normalizeEventKey(event);\n    var keyMap = {\n      Enter: openAndFocusFirstItem,\n      ArrowDown: openAndFocusFirstItem,\n      ArrowUp: openAndFocusLastItem\n    };\n    var action = keyMap[eventKey];\n\n    if (action) {\n      event.preventDefault();\n      event.stopPropagation();\n      action(event);\n    }\n  }, [openAndFocusFirstItem, openAndFocusLastItem]);\n  return _extends({}, props, {\n    ref: mergeRefs(menu.buttonRef, externalRef, popper.referenceRef),\n    id: menu.buttonId,\n    \"data-active\": dataAttr(menu.isOpen),\n    \"aria-expanded\": menu.isOpen,\n    \"aria-haspopup\": \"menu\",\n    \"aria-controls\": menu.menuId,\n    onClick: callAllHandlers(props.onClick, onClick),\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown)\n  });\n}\n\nfunction isTargetMenuItem(event) {\n  var _target$getAttribute;\n\n  var target = event.target; // this will catch `menuitem`, `menuitemradio`, `menuitemcheckbox`\n\n  return !!((_target$getAttribute = target.getAttribute(\"role\")) != null && _target$getAttribute.startsWith(\"menuitem\"));\n}\n/* -------------------------------------------------------------------------------------------------\n * useMenuList\n * -----------------------------------------------------------------------------------------------*/\n\n\n/**\n * React Hook to manage a menu list.\n *\n * The assumption here is that the `useMenu` hook is used\n * in a component higher up the tree, and its return value\n * is passed as `context` to this hook.\n */\nexport function useMenuList(props, ref) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  if (ref === void 0) {\n    ref = null;\n  }\n\n  var menu = useMenuContext();\n\n  if (!menu) {\n    throw new Error(\"useMenuContext: context is undefined. Seems you forgot to wrap component within <Menu>\");\n  }\n\n  var {\n    focusedIndex,\n    setFocusedIndex,\n    menuRef,\n    isOpen,\n    onClose,\n    menuId,\n    isLazy,\n    lazyBehavior\n  } = menu;\n  var descendants = useMenuDescendantsContext();\n  /**\n   * Hook that creates a keydown event handler that listens\n   * to printable keyboard character press\n   */\n\n  var createTypeaheadHandler = useShortcut({\n    preventDefault: event => event.key !== \" \" && isTargetMenuItem(event)\n  });\n  var onKeyDown = React.useCallback(event => {\n    var eventKey = normalizeEventKey(event);\n    var keyMap = {\n      Tab: event => event.preventDefault(),\n      Escape: onClose,\n      ArrowDown: () => {\n        var next = descendants.nextEnabled(focusedIndex);\n        if (next) setFocusedIndex(next.index);\n      },\n      ArrowUp: () => {\n        var prev = descendants.prevEnabled(focusedIndex);\n        if (prev) setFocusedIndex(prev.index);\n      }\n    };\n    var fn = keyMap[eventKey];\n\n    if (fn) {\n      event.preventDefault();\n      fn(event);\n      return;\n    }\n    /**\n     * Typeahead: Based on current character pressed,\n     * find the next item to be selected\n     */\n\n\n    var onTypeahead = createTypeaheadHandler(character => {\n      var nextItem = getNextItemFromSearch(descendants.values(), character, item => {\n        var _item$node$textConten, _item$node;\n\n        return (_item$node$textConten = item == null ? void 0 : (_item$node = item.node) == null ? void 0 : _item$node.textContent) != null ? _item$node$textConten : \"\";\n      }, descendants.item(focusedIndex));\n\n      if (nextItem) {\n        var index = descendants.indexOf(nextItem.node);\n        setFocusedIndex(index);\n      }\n    });\n\n    if (isTargetMenuItem(event)) {\n      onTypeahead(event);\n    }\n  }, [descendants, focusedIndex, createTypeaheadHandler, onClose, setFocusedIndex]);\n  var hasBeenOpened = React.useRef(false);\n\n  if (isOpen) {\n    hasBeenOpened.current = true;\n  }\n\n  var shouldRenderChildren = determineLazyBehavior({\n    hasBeenSelected: hasBeenOpened.current,\n    isLazy,\n    lazyBehavior,\n    isSelected: isOpen\n  });\n  return _extends({}, props, {\n    ref: mergeRefs(menuRef, ref),\n    children: shouldRenderChildren ? props.children : null,\n    tabIndex: -1,\n    role: \"menu\",\n    id: menuId,\n    style: _extends({}, props.style, {\n      transformOrigin: \"var(--popper-transform-origin)\"\n    }),\n    \"aria-orientation\": \"vertical\",\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown)\n  });\n}\n/* -------------------------------------------------------------------------------------------------\n * useMenuPosition: Composes usePopper to position the menu\n * -----------------------------------------------------------------------------------------------*/\n\nexport function useMenuPositioner(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var {\n    popper,\n    isOpen\n  } = useMenuContext();\n  return popper.getPopperProps(_extends({}, props, {\n    style: _extends({\n      visibility: isOpen ? \"visible\" : \"hidden\"\n    }, props.style)\n  }));\n}\n/* -------------------------------------------------------------------------------------------------\n * useMenuItem: Hook for each menu item within the menu list.\n   We also use it in `useMenuItemOption`\n * -----------------------------------------------------------------------------------------------*/\n\nexport function useMenuItem(props, externalRef) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  if (externalRef === void 0) {\n    externalRef = null;\n  }\n\n  var {\n    onMouseEnter: onMouseEnterProp,\n    onMouseMove: onMouseMoveProp,\n    onMouseLeave: onMouseLeaveProp,\n    onClick: onClickProp,\n    isDisabled,\n    isFocusable,\n    closeOnSelect\n  } = props,\n      htmlProps = _objectWithoutPropertiesLoose(props, [\"onMouseEnter\", \"onMouseMove\", \"onMouseLeave\", \"onClick\", \"isDisabled\", \"isFocusable\", \"closeOnSelect\"]);\n\n  var menu = useMenuContext();\n  var {\n    setFocusedIndex,\n    focusedIndex,\n    closeOnSelect: menuCloseOnSelect,\n    onClose,\n    menuRef,\n    isOpen,\n    menuId\n  } = menu;\n  var ref = React.useRef(null);\n  var id = menuId + \"-menuitem-\" + useId();\n  /**\n   * Register the menuitem's node into the domContext\n   */\n\n  var {\n    index,\n    register\n  } = useMenuDescendant({\n    disabled: isDisabled && !isFocusable\n  });\n  var onMouseEnter = React.useCallback(event => {\n    onMouseEnterProp == null ? void 0 : onMouseEnterProp(event);\n    if (isDisabled) return;\n    setFocusedIndex(index);\n  }, [setFocusedIndex, index, isDisabled, onMouseEnterProp]);\n  var onMouseMove = React.useCallback(event => {\n    onMouseMoveProp == null ? void 0 : onMouseMoveProp(event);\n\n    if (ref.current && !isActiveElement(ref.current)) {\n      onMouseEnter(event);\n    }\n  }, [onMouseEnter, onMouseMoveProp]);\n  var onMouseLeave = React.useCallback(event => {\n    onMouseLeaveProp == null ? void 0 : onMouseLeaveProp(event);\n    if (isDisabled) return;\n    setFocusedIndex(-1);\n  }, [setFocusedIndex, isDisabled, onMouseLeaveProp]);\n  var onClick = React.useCallback(event => {\n    onClickProp == null ? void 0 : onClickProp(event);\n    if (!isTargetMenuItem(event)) return;\n    /**\n     * Close menu and parent menus, allowing the MenuItem\n     * to override its parent menu's `closeOnSelect` prop.\n     */\n\n    if (closeOnSelect != null ? closeOnSelect : menuCloseOnSelect) {\n      onClose();\n    }\n  }, [onClose, onClickProp, menuCloseOnSelect, closeOnSelect]);\n  var isFocused = index === focusedIndex;\n  var trulyDisabled = isDisabled && !isFocusable;\n  useUpdateEffect(() => {\n    if (!isOpen) return;\n\n    if (isFocused && !trulyDisabled && ref.current) {\n      focus(ref.current, {\n        nextTick: true,\n        selectTextIfInput: false\n      });\n    } else if (menuRef.current && !isActiveElement(menuRef.current)) {\n      focus(menuRef.current);\n    }\n  }, [isFocused, trulyDisabled, menuRef, isOpen]);\n  var clickableProps = useClickable({\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    ref: mergeRefs(register, ref, externalRef),\n    isDisabled,\n    isFocusable\n  });\n  return _extends({}, htmlProps, clickableProps, {\n    id,\n    role: \"menuitem\",\n    tabIndex: isFocused ? 0 : -1\n  });\n}\n/* -------------------------------------------------------------------------------------------------\n * useMenuOption: Composes useMenuItem to provide a selectable/checkable menu item\n * -----------------------------------------------------------------------------------------------*/\n\nexport function useMenuOption(props, ref) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  if (ref === void 0) {\n    ref = null;\n  }\n\n  var {\n    type = \"radio\",\n    isChecked\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"type\", \"isChecked\"]);\n\n  var ownProps = useMenuItem(rest, ref);\n  return _extends({}, ownProps, {\n    role: \"menuitem\" + type,\n    \"aria-checked\": isChecked\n  });\n}\n/* -------------------------------------------------------------------------------------------------\n * useMenuOptionGroup: Manages the state of multiple selectable menuitem or menu option\n * -----------------------------------------------------------------------------------------------*/\n\nexport function useMenuOptionGroup(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var {\n    children,\n    type = \"radio\",\n    value: valueProp,\n    defaultValue,\n    onChange: onChangeProp\n  } = props,\n      htmlProps = _objectWithoutPropertiesLoose(props, [\"children\", \"type\", \"value\", \"defaultValue\", \"onChange\"]);\n\n  var isRadio = type === \"radio\";\n  var fallback = isRadio ? \"\" : [];\n  var [value, setValue] = useControllableState({\n    defaultValue: defaultValue != null ? defaultValue : fallback,\n    value: valueProp,\n    onChange: onChangeProp\n  });\n  var onChange = React.useCallback(selectedValue => {\n    if (type === \"radio\" && isString(value)) {\n      setValue(selectedValue);\n    }\n\n    if (type === \"checkbox\" && isArray(value)) {\n      var nextValue = value.includes(selectedValue) ? removeItem(value, selectedValue) : addItem(value, selectedValue);\n      setValue(nextValue);\n    }\n  }, [value, setValue, type]);\n  var validChildren = getValidChildren(children);\n  var clones = validChildren.map(child => {\n    /**\n     * We've added an internal `id` to each `MenuItemOption`,\n     * let's use that for type-checking.\n     *\n     * We can't rely on displayName or the element's type since\n     * they can be changed by the user.\n     */\n    if (child.type.id !== \"MenuItemOption\") return child;\n\n    var onClick = event => {\n      onChange(child.props.value);\n      child.props.onClick == null ? void 0 : child.props.onClick(event);\n    };\n\n    var isChecked = type === \"radio\" ? child.props.value === value : value.includes(child.props.value);\n    return /*#__PURE__*/React.cloneElement(child, {\n      type,\n      onClick,\n      isChecked\n    });\n  });\n  return _extends({}, htmlProps, {\n    children: clones\n  });\n}\nexport function useMenuState() {\n  var {\n    isOpen,\n    onClose\n  } = useMenuContext();\n  return {\n    isOpen,\n    onClose\n  };\n}\n//# sourceMappingURL=use-menu.js.map"]},"metadata":{},"sourceType":"module"}