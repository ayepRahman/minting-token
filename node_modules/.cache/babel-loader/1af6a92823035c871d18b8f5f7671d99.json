{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n/**\n * React component used to display notifications, messages, or\n * statuses in different shapes and sizes.\n *\n * @see Docs https://chakra-ui.com/docs/data-display/badge\n */\n\nexport var Badge = /*#__PURE__*/forwardRef((props, ref) => {\n  var styles = useStyleConfig(\"Badge\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, [\"className\"]);\n\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({\n    ref: ref,\n    className: cx(\"chakra-badge\", props.className)\n  }, rest, {\n    __css: _extends({\n      display: \"inline-block\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\"\n    }, styles)\n  }));\n});\n\nif (__DEV__) {\n  Badge.displayName = \"Badge\";\n}","map":{"version":3,"sources":["/Users/arifrahman/Code/personal/minting-token/client/node_modules/@chakra-ui/layout/dist/esm/badge.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","chakra","forwardRef","omitThemingProps","useStyleConfig","cx","__DEV__","React","Badge","props","ref","styles","_omitThemingProps","rest","createElement","span","className","__css","display","whiteSpace","verticalAlign","displayName"],"mappings":"AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,SAASQ,6BAAT,CAAuCN,MAAvC,EAA+CO,QAA/C,EAAyD;AAAE,MAAIP,MAAM,IAAI,IAAd,EAAoB,OAAO,EAAP;AAAW,MAAIJ,MAAM,GAAG,EAAb;AAAiB,MAAIY,UAAU,GAAGd,MAAM,CAACe,IAAP,CAAYT,MAAZ,CAAjB;AAAsC,MAAIC,GAAJ,EAASJ,CAAT;;AAAY,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGW,UAAU,CAACT,MAA3B,EAAmCF,CAAC,EAApC,EAAwC;AAAEI,IAAAA,GAAG,GAAGO,UAAU,CAACX,CAAD,CAAhB;AAAqB,QAAIU,QAAQ,CAACG,OAAT,CAAiBT,GAAjB,KAAyB,CAA7B,EAAgC;AAAUL,IAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;;AAAC,SAAOL,MAAP;AAAgB;;AAEnT,SAASe,MAAT,EAAiBC,UAAjB,EAA6BC,gBAA7B,EAA+CC,cAA/C,QAAqE,mBAArE;AACA,SAASC,EAAT,EAAaC,OAAb,QAA4B,kBAA5B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,KAAK,GAAG,aAAaN,UAAU,CAAC,CAACO,KAAD,EAAQC,GAAR,KAAgB;AACzD,MAAIC,MAAM,GAAGP,cAAc,CAAC,OAAD,EAAUK,KAAV,CAA3B;;AAEA,MAAIG,iBAAiB,GAAGT,gBAAgB,CAACM,KAAD,CAAxC;AAAA,MACII,IAAI,GAAGjB,6BAA6B,CAACgB,iBAAD,EAAoB,CAAC,WAAD,CAApB,CADxC;;AAGA,SAAO,aAAaL,KAAK,CAACO,aAAN,CAAoBb,MAAM,CAACc,IAA3B,EAAiChC,QAAQ,CAAC;AAC5D2B,IAAAA,GAAG,EAAEA,GADuD;AAE5DM,IAAAA,SAAS,EAAEX,EAAE,CAAC,cAAD,EAAiBI,KAAK,CAACO,SAAvB;AAF+C,GAAD,EAG1DH,IAH0D,EAGpD;AACPI,IAAAA,KAAK,EAAElC,QAAQ,CAAC;AACdmC,MAAAA,OAAO,EAAE,cADK;AAEdC,MAAAA,UAAU,EAAE,QAFE;AAGdC,MAAAA,aAAa,EAAE;AAHD,KAAD,EAIZT,MAJY;AADR,GAHoD,CAAzC,CAApB;AAUD,CAhByC,CAAnC;;AAkBP,IAAIL,OAAJ,EAAa;AACXE,EAAAA,KAAK,CAACa,WAAN,GAAoB,OAApB;AACD","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { chakra, forwardRef, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n\n/**\n * React component used to display notifications, messages, or\n * statuses in different shapes and sizes.\n *\n * @see Docs https://chakra-ui.com/docs/data-display/badge\n */\nexport var Badge = /*#__PURE__*/forwardRef((props, ref) => {\n  var styles = useStyleConfig(\"Badge\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, [\"className\"]);\n\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({\n    ref: ref,\n    className: cx(\"chakra-badge\", props.className)\n  }, rest, {\n    __css: _extends({\n      display: \"inline-block\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\"\n    }, styles)\n  }));\n});\n\nif (__DEV__) {\n  Badge.displayName = \"Badge\";\n}\n//# sourceMappingURL=badge.js.map"]},"metadata":{},"sourceType":"module"}