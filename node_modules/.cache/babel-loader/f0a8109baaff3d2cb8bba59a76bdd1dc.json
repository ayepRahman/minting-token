{"ast":null,"code":"import * as React from \"react\";\nexport function useEventListeners() {\n  var listeners = React.useRef(new Map());\n  var currentListeners = listeners.current;\n  var add = React.useCallback((el, type, listener, options) => {\n    listeners.current.set(listener, {\n      type,\n      el,\n      options\n    });\n    el.addEventListener(type, listener, options);\n  }, []);\n  var remove = React.useCallback((el, type, listener, options) => {\n    el.removeEventListener(type, listener, options);\n    listeners.current.delete(listener);\n  }, []);\n  React.useEffect(() => () => {\n    currentListeners.forEach((value, key) => {\n      remove(value.el, value.type, key, value.options);\n    });\n  }, [remove, currentListeners]);\n  return {\n    add,\n    remove\n  };\n}","map":{"version":3,"sources":["/Users/arifrahman/Code/personal/minting-token/client/node_modules/@chakra-ui/clickable/dist/esm/use-event-listeners.js"],"names":["React","useEventListeners","listeners","useRef","Map","currentListeners","current","add","useCallback","el","type","listener","options","set","addEventListener","remove","removeEventListener","delete","useEffect","forEach","value","key"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,SAASC,iBAAT,GAA6B;AAClC,MAAIC,SAAS,GAAGF,KAAK,CAACG,MAAN,CAAa,IAAIC,GAAJ,EAAb,CAAhB;AACA,MAAIC,gBAAgB,GAAGH,SAAS,CAACI,OAAjC;AACA,MAAIC,GAAG,GAAGP,KAAK,CAACQ,WAAN,CAAkB,CAACC,EAAD,EAAKC,IAAL,EAAWC,QAAX,EAAqBC,OAArB,KAAiC;AAC3DV,IAAAA,SAAS,CAACI,OAAV,CAAkBO,GAAlB,CAAsBF,QAAtB,EAAgC;AAC9BD,MAAAA,IAD8B;AAE9BD,MAAAA,EAF8B;AAG9BG,MAAAA;AAH8B,KAAhC;AAKAH,IAAAA,EAAE,CAACK,gBAAH,CAAoBJ,IAApB,EAA0BC,QAA1B,EAAoCC,OAApC;AACD,GAPS,EAOP,EAPO,CAAV;AAQA,MAAIG,MAAM,GAAGf,KAAK,CAACQ,WAAN,CAAkB,CAACC,EAAD,EAAKC,IAAL,EAAWC,QAAX,EAAqBC,OAArB,KAAiC;AAC9DH,IAAAA,EAAE,CAACO,mBAAH,CAAuBN,IAAvB,EAA6BC,QAA7B,EAAuCC,OAAvC;AACAV,IAAAA,SAAS,CAACI,OAAV,CAAkBW,MAAlB,CAAyBN,QAAzB;AACD,GAHY,EAGV,EAHU,CAAb;AAIAX,EAAAA,KAAK,CAACkB,SAAN,CAAgB,MAAM,MAAM;AAC1Bb,IAAAA,gBAAgB,CAACc,OAAjB,CAAyB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACvCN,MAAAA,MAAM,CAACK,KAAK,CAACX,EAAP,EAAWW,KAAK,CAACV,IAAjB,EAAuBW,GAAvB,EAA4BD,KAAK,CAACR,OAAlC,CAAN;AACD,KAFD;AAGD,GAJD,EAIG,CAACG,MAAD,EAASV,gBAAT,CAJH;AAKA,SAAO;AACLE,IAAAA,GADK;AAELQ,IAAAA;AAFK,GAAP;AAID","sourcesContent":["import * as React from \"react\";\nexport function useEventListeners() {\n  var listeners = React.useRef(new Map());\n  var currentListeners = listeners.current;\n  var add = React.useCallback((el, type, listener, options) => {\n    listeners.current.set(listener, {\n      type,\n      el,\n      options\n    });\n    el.addEventListener(type, listener, options);\n  }, []);\n  var remove = React.useCallback((el, type, listener, options) => {\n    el.removeEventListener(type, listener, options);\n    listeners.current.delete(listener);\n  }, []);\n  React.useEffect(() => () => {\n    currentListeners.forEach((value, key) => {\n      remove(value.el, value.type, key, value.options);\n    });\n  }, [remove, currentListeners]);\n  return {\n    add,\n    remove\n  };\n}\n//# sourceMappingURL=use-event-listeners.js.map"]},"metadata":{},"sourceType":"module"}