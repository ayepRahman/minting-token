{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const counterSlice = createSlice({\n  name: \"counter\",\n  initialState: {\n    count: 0\n  },\n  reducers: {\n    increment: state => {\n      state.count += 1;\n    },\n    decrement: state => {\n      state.count -= 1;\n    },\n    add: (state, action) => {\n      state.count += action.payload;\n    },\n    subtract: (state, action) => {\n      state.count -= action.payload;\n    }\n  }\n});\nexport const {\n  increment,\n  decrement,\n  add,\n  subtract\n} = counterSlice.actions;\nexport default counterSlice.reducer;","map":{"version":3,"sources":["/Users/arifrahman/Code/personal/minting-token/client/src/redux/counter.ts"],"names":["createSlice","counterSlice","name","initialState","count","reducers","increment","state","decrement","add","action","payload","subtract","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAEA,OAAO,MAAMC,YAAY,GAAGD,WAAW,CAAC;AACtCE,EAAAA,IAAI,EAAE,SADgC;AAEtCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE;AADK,GAFwB;AAKtCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAGC,KAAD,IAAW;AACpBA,MAAAA,KAAK,CAACH,KAAN,IAAe,CAAf;AACD,KAHO;AAIRI,IAAAA,SAAS,EAAGD,KAAD,IAAW;AACpBA,MAAAA,KAAK,CAACH,KAAN,IAAe,CAAf;AACD,KANO;AAORK,IAAAA,GAAG,EAAE,CAACF,KAAD,EAAQG,MAAR,KAA0C;AAC7CH,MAAAA,KAAK,CAACH,KAAN,IAAeM,MAAM,CAACC,OAAtB;AACD,KATO;AAURC,IAAAA,QAAQ,EAAE,CAACL,KAAD,EAAQG,MAAR,KAA0C;AAClDH,MAAAA,KAAK,CAACH,KAAN,IAAeM,MAAM,CAACC,OAAtB;AACD;AAZO;AAL4B,CAAD,CAAhC;AAqBP,OAAO,MAAM;AAAEL,EAAAA,SAAF;AAAaE,EAAAA,SAAb;AAAwBC,EAAAA,GAAxB;AAA6BG,EAAAA;AAA7B,IAA0CX,YAAY,CAACY,OAA7D;AACP,eAAeZ,YAAY,CAACa,OAA5B","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nexport const counterSlice = createSlice({\n  name: \"counter\",\n  initialState: {\n    count: 0,\n  },\n  reducers: {\n    increment: (state) => {\n      state.count += 1;\n    },\n    decrement: (state) => {\n      state.count -= 1;\n    },\n    add: (state, action: PayloadAction<number>) => {\n      state.count += action.payload;\n    },\n    subtract: (state, action: PayloadAction<number>) => {\n      state.count -= action.payload;\n    },\n  },\n});\n\nexport const { increment, decrement, add, subtract } = counterSlice.actions;\nexport default counterSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}