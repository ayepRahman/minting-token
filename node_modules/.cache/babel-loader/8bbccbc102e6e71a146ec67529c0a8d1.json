{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef, useStyles } from \"@chakra-ui/system\";\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nvar placements = {\n  left: {\n    marginEnd: \"-1px\",\n    borderEndRadius: 0,\n    borderEndColor: \"transparent\"\n  },\n  right: {\n    marginStart: \"-1px\",\n    borderStartRadius: 0,\n    borderStartColor: \"transparent\"\n  }\n};\nvar StyledAddon = chakra(\"div\", {\n  baseStyle: {\n    flex: \"0 0 auto\",\n    width: \"auto\",\n    display: \"flex\",\n    alignItems: \"center\",\n    whiteSpace: \"nowrap\"\n  }\n});\n/**\n * InputAddon\n *\n * Element to append or prepend to an input\n */\n\nexport var InputAddon = /*#__PURE__*/forwardRef((props, ref) => {\n  var _placements$placement;\n\n  var {\n    placement = \"left\"\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"placement\"]);\n\n  var placementStyles = (_placements$placement = placements[placement]) != null ? _placements$placement : {};\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(StyledAddon, _extends({\n    ref: ref\n  }, rest, {\n    __css: _extends({}, styles.addon, placementStyles)\n  }));\n});\n\nif (__DEV__) {\n  InputAddon.displayName = \"InputAddon\";\n}\n/**\n * InputLeftAddon\n *\n * Element to append to the left of an input\n */\n\n\nexport var InputLeftAddon = /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/React.createElement(InputAddon, _extends({\n  ref: ref,\n  placement: \"left\"\n}, props, {\n  className: cx(\"chakra-input__left-addon\", props.className)\n})));\n\nif (__DEV__) {\n  InputLeftAddon.displayName = \"InputLeftAddon\";\n} // This is used in `input-group.tsx`\n\n\nInputLeftAddon.id = \"InputLeftAddon\";\n/**\n * InputRightAddon\n *\n * Element to append to the right of an input\n */\n\nexport var InputRightAddon = /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/React.createElement(InputAddon, _extends({\n  ref: ref,\n  placement: \"right\"\n}, props, {\n  className: cx(\"chakra-input__right-addon\", props.className)\n})));\n\nif (__DEV__) {\n  InputRightAddon.displayName = \"InputRightAddon\";\n} // This is used in `input-group.tsx`\n\n\nInputRightAddon.id = \"InputRightAddon\";","map":{"version":3,"sources":["/Users/arifrahman/Code/personal/minting-token/client/node_modules/@chakra-ui/input/dist/esm/input-addon.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","chakra","forwardRef","useStyles","cx","__DEV__","React","placements","left","marginEnd","borderEndRadius","borderEndColor","right","marginStart","borderStartRadius","borderStartColor","StyledAddon","baseStyle","flex","width","display","alignItems","whiteSpace","InputAddon","props","ref","_placements$placement","placement","rest","placementStyles","styles","createElement","__css","addon","displayName","InputLeftAddon","className","id","InputRightAddon"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { chakra, forwardRef, useStyles } from \"@chakra-ui/system\";\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nvar placements = {\n  left: {\n    marginEnd: \"-1px\",\n    borderEndRadius: 0,\n    borderEndColor: \"transparent\"\n  },\n  right: {\n    marginStart: \"-1px\",\n    borderStartRadius: 0,\n    borderStartColor: \"transparent\"\n  }\n};\nvar StyledAddon = chakra(\"div\", {\n  baseStyle: {\n    flex: \"0 0 auto\",\n    width: \"auto\",\n    display: \"flex\",\n    alignItems: \"center\",\n    whiteSpace: \"nowrap\"\n  }\n});\n\n/**\n * InputAddon\n *\n * Element to append or prepend to an input\n */\nexport var InputAddon = /*#__PURE__*/forwardRef((props, ref) => {\n  var _placements$placement;\n\n  var {\n    placement = \"left\"\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"placement\"]);\n\n  var placementStyles = (_placements$placement = placements[placement]) != null ? _placements$placement : {};\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(StyledAddon, _extends({\n    ref: ref\n  }, rest, {\n    __css: _extends({}, styles.addon, placementStyles)\n  }));\n});\n\nif (__DEV__) {\n  InputAddon.displayName = \"InputAddon\";\n}\n/**\n * InputLeftAddon\n *\n * Element to append to the left of an input\n */\n\n\nexport var InputLeftAddon = /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/React.createElement(InputAddon, _extends({\n  ref: ref,\n  placement: \"left\"\n}, props, {\n  className: cx(\"chakra-input__left-addon\", props.className)\n})));\n\nif (__DEV__) {\n  InputLeftAddon.displayName = \"InputLeftAddon\";\n} // This is used in `input-group.tsx`\n\n\nInputLeftAddon.id = \"InputLeftAddon\";\n/**\n * InputRightAddon\n *\n * Element to append to the right of an input\n */\n\nexport var InputRightAddon = /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/React.createElement(InputAddon, _extends({\n  ref: ref,\n  placement: \"right\"\n}, props, {\n  className: cx(\"chakra-input__right-addon\", props.className)\n})));\n\nif (__DEV__) {\n  InputRightAddon.displayName = \"InputRightAddon\";\n} // This is used in `input-group.tsx`\n\n\nInputRightAddon.id = \"InputRightAddon\";\n//# sourceMappingURL=input-addon.js.map"]},"metadata":{},"sourceType":"module"}