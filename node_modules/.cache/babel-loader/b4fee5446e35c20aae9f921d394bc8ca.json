{"ast":null,"code":"import { t } from \"../utils\";\nexport var border = {\n  border: t.borders(\"border\"),\n  borderWidth: t.borderWidths(\"borderWidth\"),\n  borderStyle: t.borderStyles(\"borderStyle\"),\n  borderColor: t.colors(\"borderColor\"),\n  borderRadius: t.radii(\"borderRadius\"),\n  borderTop: t.borders(\"borderTop\"),\n  borderBlockStart: t.borders(\"borderBlockStart\"),\n  borderTopLeftRadius: t.radii(\"borderTopLeftRadius\"),\n  borderStartStartRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: \"borderTopLeftRadius\",\n      rtl: \"borderTopRightRadius\"\n    }\n  }),\n  borderEndStartRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: \"borderBottomLeftRadius\",\n      rtl: \"borderBottomRightRadius\"\n    }\n  }),\n  borderTopRightRadius: t.radii(\"borderTopRightRadius\"),\n  borderStartEndRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: \"borderTopRightRadius\",\n      rtl: \"borderTopLeftRadius\"\n    }\n  }),\n  borderEndEndRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: \"borderBottomRightRadius\",\n      rtl: \"borderBottomLeftRadius\"\n    }\n  }),\n  borderRight: t.borders(\"borderRight\"),\n  borderInlineEnd: t.borders(\"borderInlineEnd\"),\n  borderBottom: t.borders(\"borderBottom\"),\n  borderBlockEnd: t.borders(\"borderBlockEnd\"),\n  borderBottomLeftRadius: t.radii(\"borderBottomLeftRadius\"),\n  borderBottomRightRadius: t.radii(\"borderBottomRightRadius\"),\n  borderLeft: t.borders(\"borderLeft\"),\n  borderInlineStart: {\n    property: \"borderInlineStart\",\n    scale: \"borders\"\n  },\n  borderInlineStartRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: [\"borderTopLeftRadius\", \"borderBottomLeftRadius\"],\n      rtl: [\"borderTopRightRadius\", \"borderBottomRightRadius\"]\n    }\n  }),\n  borderInlineEndRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: [\"borderTopRightRadius\", \"borderBottomRightRadius\"],\n      rtl: [\"borderTopLeftRadius\", \"borderBottomLeftRadius\"]\n    }\n  }),\n  borderX: t.borders([\"borderLeft\", \"borderRight\"]),\n  borderInline: t.borders(\"borderInline\"),\n  borderY: t.borders([\"borderTop\", \"borderBottom\"]),\n  borderBlock: t.borders(\"borderBlock\"),\n  borderTopWidth: t.borderWidths(\"borderTopWidth\"),\n  borderBlockStartWidth: t.borderWidths(\"borderBlockStartWidth\"),\n  borderTopColor: t.colors(\"borderTopColor\"),\n  borderBlockStartColor: t.colors(\"borderBlockStartColor\"),\n  borderTopStyle: t.borderStyles(\"borderTopStyle\"),\n  borderBlockStartStyle: t.borderStyles(\"borderBlockStartStyle\"),\n  borderBottomWidth: t.borderWidths(\"borderBottomWidth\"),\n  borderBlockEndWidth: t.borderWidths(\"borderBlockEndWidth\"),\n  borderBottomColor: t.colors(\"borderBottomColor\"),\n  borderBlockEndColor: t.colors(\"borderBlockEndColor\"),\n  borderBottomStyle: t.borderStyles(\"borderBottomStyle\"),\n  borderBlockEndStyle: t.borderStyles(\"borderBlockEndStyle\"),\n  borderLeftWidth: t.borderWidths(\"borderLeftWidth\"),\n  borderInlineStartWidth: t.borderWidths(\"borderInlineStartWidth\"),\n  borderLeftColor: t.colors(\"borderLeftColor\"),\n  borderInlineStartColor: t.colors(\"borderInlineStartColor\"),\n  borderLeftStyle: t.borderStyles(\"borderLeftStyle\"),\n  borderInlineStartStyle: t.borderStyles(\"borderInlineStartStyle\"),\n  borderRightWidth: t.borderWidths(\"borderRightWidth\"),\n  borderInlineEndWidth: t.borderWidths(\"borderInlineEndWidth\"),\n  borderRightColor: t.colors(\"borderRightColor\"),\n  borderInlineEndColor: t.colors(\"borderInlineEndColor\"),\n  borderRightStyle: t.borderStyles(\"borderRightStyle\"),\n  borderInlineEndStyle: t.borderStyles(\"borderInlineEndStyle\"),\n  borderTopRadius: t.radii([\"borderTopLeftRadius\", \"borderTopRightRadius\"]),\n  borderBottomRadius: t.radii([\"borderBottomLeftRadius\", \"borderBottomRightRadius\"]),\n  borderLeftRadius: t.radii([\"borderTopLeftRadius\", \"borderBottomLeftRadius\"]),\n  borderRightRadius: t.radii([\"borderTopRightRadius\", \"borderBottomRightRadius\"])\n};\nObject.assign(border, {\n  rounded: border.borderRadius,\n  roundedTop: border.borderTopRadius,\n  roundedTopLeft: border.borderTopLeftRadius,\n  roundedTopRight: border.borderTopRightRadius,\n  roundedTopStart: border.borderStartStartRadius,\n  roundedTopEnd: border.borderStartEndRadius,\n  roundedBottom: border.borderBottomRadius,\n  roundedBottomLeft: border.borderBottomLeftRadius,\n  roundedBottomRight: border.borderBottomRightRadius,\n  roundedBottomStart: border.borderEndStartRadius,\n  roundedBottomEnd: border.borderEndEndRadius,\n  roundedLeft: border.borderLeftRadius,\n  roundedRight: border.borderRightRadius,\n  roundedStart: border.borderInlineStartRadius,\n  roundedEnd: border.borderInlineEndRadius,\n  borderStart: border.borderInlineStart,\n  borderEnd: border.borderInlineEnd,\n  borderTopStartRadius: border.borderStartStartRadius,\n  borderTopEndRadius: border.borderStartEndRadius,\n  borderBottomStartRadius: border.borderEndStartRadius,\n  borderBottomEndRadius: border.borderEndEndRadius,\n  borderStartRadius: border.borderInlineStartRadius,\n  borderEndRadius: border.borderInlineEndRadius,\n  borderStartWidth: border.borderInlineStartWidth,\n  borderEndWidth: border.borderInlineEndWidth,\n  borderStartColor: border.borderInlineStartColor,\n  borderEndColor: border.borderInlineEndColor,\n  borderStartStyle: border.borderInlineStartStyle,\n  borderEndStyle: border.borderInlineEndStyle\n});\n/**\n * The prop types for border properties listed above\n */","map":{"version":3,"sources":["/Users/arifrahman/Code/personal/minting-token/client/node_modules/@chakra-ui/styled-system/dist/esm/config/border.js"],"names":["t","border","borders","borderWidth","borderWidths","borderStyle","borderStyles","borderColor","colors","borderRadius","radii","borderTop","borderBlockStart","borderTopLeftRadius","borderStartStartRadius","logical","scale","property","ltr","rtl","borderEndStartRadius","borderTopRightRadius","borderStartEndRadius","borderEndEndRadius","borderRight","borderInlineEnd","borderBottom","borderBlockEnd","borderBottomLeftRadius","borderBottomRightRadius","borderLeft","borderInlineStart","borderInlineStartRadius","borderInlineEndRadius","borderX","borderInline","borderY","borderBlock","borderTopWidth","borderBlockStartWidth","borderTopColor","borderBlockStartColor","borderTopStyle","borderBlockStartStyle","borderBottomWidth","borderBlockEndWidth","borderBottomColor","borderBlockEndColor","borderBottomStyle","borderBlockEndStyle","borderLeftWidth","borderInlineStartWidth","borderLeftColor","borderInlineStartColor","borderLeftStyle","borderInlineStartStyle","borderRightWidth","borderInlineEndWidth","borderRightColor","borderInlineEndColor","borderRightStyle","borderInlineEndStyle","borderTopRadius","borderBottomRadius","borderLeftRadius","borderRightRadius","Object","assign","rounded","roundedTop","roundedTopLeft","roundedTopRight","roundedTopStart","roundedTopEnd","roundedBottom","roundedBottomLeft","roundedBottomRight","roundedBottomStart","roundedBottomEnd","roundedLeft","roundedRight","roundedStart","roundedEnd","borderStart","borderEnd","borderTopStartRadius","borderTopEndRadius","borderBottomStartRadius","borderBottomEndRadius","borderStartRadius","borderEndRadius","borderStartWidth","borderEndWidth","borderStartColor","borderEndColor","borderStartStyle","borderEndStyle"],"mappings":"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","sourcesContent":["import { t } from \"../utils\";\nexport var border = {\n  border: t.borders(\"border\"),\n  borderWidth: t.borderWidths(\"borderWidth\"),\n  borderStyle: t.borderStyles(\"borderStyle\"),\n  borderColor: t.colors(\"borderColor\"),\n  borderRadius: t.radii(\"borderRadius\"),\n  borderTop: t.borders(\"borderTop\"),\n  borderBlockStart: t.borders(\"borderBlockStart\"),\n  borderTopLeftRadius: t.radii(\"borderTopLeftRadius\"),\n  borderStartStartRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: \"borderTopLeftRadius\",\n      rtl: \"borderTopRightRadius\"\n    }\n  }),\n  borderEndStartRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: \"borderBottomLeftRadius\",\n      rtl: \"borderBottomRightRadius\"\n    }\n  }),\n  borderTopRightRadius: t.radii(\"borderTopRightRadius\"),\n  borderStartEndRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: \"borderTopRightRadius\",\n      rtl: \"borderTopLeftRadius\"\n    }\n  }),\n  borderEndEndRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: \"borderBottomRightRadius\",\n      rtl: \"borderBottomLeftRadius\"\n    }\n  }),\n  borderRight: t.borders(\"borderRight\"),\n  borderInlineEnd: t.borders(\"borderInlineEnd\"),\n  borderBottom: t.borders(\"borderBottom\"),\n  borderBlockEnd: t.borders(\"borderBlockEnd\"),\n  borderBottomLeftRadius: t.radii(\"borderBottomLeftRadius\"),\n  borderBottomRightRadius: t.radii(\"borderBottomRightRadius\"),\n  borderLeft: t.borders(\"borderLeft\"),\n  borderInlineStart: {\n    property: \"borderInlineStart\",\n    scale: \"borders\"\n  },\n  borderInlineStartRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: [\"borderTopLeftRadius\", \"borderBottomLeftRadius\"],\n      rtl: [\"borderTopRightRadius\", \"borderBottomRightRadius\"]\n    }\n  }),\n  borderInlineEndRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: [\"borderTopRightRadius\", \"borderBottomRightRadius\"],\n      rtl: [\"borderTopLeftRadius\", \"borderBottomLeftRadius\"]\n    }\n  }),\n  borderX: t.borders([\"borderLeft\", \"borderRight\"]),\n  borderInline: t.borders(\"borderInline\"),\n  borderY: t.borders([\"borderTop\", \"borderBottom\"]),\n  borderBlock: t.borders(\"borderBlock\"),\n  borderTopWidth: t.borderWidths(\"borderTopWidth\"),\n  borderBlockStartWidth: t.borderWidths(\"borderBlockStartWidth\"),\n  borderTopColor: t.colors(\"borderTopColor\"),\n  borderBlockStartColor: t.colors(\"borderBlockStartColor\"),\n  borderTopStyle: t.borderStyles(\"borderTopStyle\"),\n  borderBlockStartStyle: t.borderStyles(\"borderBlockStartStyle\"),\n  borderBottomWidth: t.borderWidths(\"borderBottomWidth\"),\n  borderBlockEndWidth: t.borderWidths(\"borderBlockEndWidth\"),\n  borderBottomColor: t.colors(\"borderBottomColor\"),\n  borderBlockEndColor: t.colors(\"borderBlockEndColor\"),\n  borderBottomStyle: t.borderStyles(\"borderBottomStyle\"),\n  borderBlockEndStyle: t.borderStyles(\"borderBlockEndStyle\"),\n  borderLeftWidth: t.borderWidths(\"borderLeftWidth\"),\n  borderInlineStartWidth: t.borderWidths(\"borderInlineStartWidth\"),\n  borderLeftColor: t.colors(\"borderLeftColor\"),\n  borderInlineStartColor: t.colors(\"borderInlineStartColor\"),\n  borderLeftStyle: t.borderStyles(\"borderLeftStyle\"),\n  borderInlineStartStyle: t.borderStyles(\"borderInlineStartStyle\"),\n  borderRightWidth: t.borderWidths(\"borderRightWidth\"),\n  borderInlineEndWidth: t.borderWidths(\"borderInlineEndWidth\"),\n  borderRightColor: t.colors(\"borderRightColor\"),\n  borderInlineEndColor: t.colors(\"borderInlineEndColor\"),\n  borderRightStyle: t.borderStyles(\"borderRightStyle\"),\n  borderInlineEndStyle: t.borderStyles(\"borderInlineEndStyle\"),\n  borderTopRadius: t.radii([\"borderTopLeftRadius\", \"borderTopRightRadius\"]),\n  borderBottomRadius: t.radii([\"borderBottomLeftRadius\", \"borderBottomRightRadius\"]),\n  borderLeftRadius: t.radii([\"borderTopLeftRadius\", \"borderBottomLeftRadius\"]),\n  borderRightRadius: t.radii([\"borderTopRightRadius\", \"borderBottomRightRadius\"])\n};\nObject.assign(border, {\n  rounded: border.borderRadius,\n  roundedTop: border.borderTopRadius,\n  roundedTopLeft: border.borderTopLeftRadius,\n  roundedTopRight: border.borderTopRightRadius,\n  roundedTopStart: border.borderStartStartRadius,\n  roundedTopEnd: border.borderStartEndRadius,\n  roundedBottom: border.borderBottomRadius,\n  roundedBottomLeft: border.borderBottomLeftRadius,\n  roundedBottomRight: border.borderBottomRightRadius,\n  roundedBottomStart: border.borderEndStartRadius,\n  roundedBottomEnd: border.borderEndEndRadius,\n  roundedLeft: border.borderLeftRadius,\n  roundedRight: border.borderRightRadius,\n  roundedStart: border.borderInlineStartRadius,\n  roundedEnd: border.borderInlineEndRadius,\n  borderStart: border.borderInlineStart,\n  borderEnd: border.borderInlineEnd,\n  borderTopStartRadius: border.borderStartStartRadius,\n  borderTopEndRadius: border.borderStartEndRadius,\n  borderBottomStartRadius: border.borderEndStartRadius,\n  borderBottomEndRadius: border.borderEndEndRadius,\n  borderStartRadius: border.borderInlineStartRadius,\n  borderEndRadius: border.borderInlineEndRadius,\n  borderStartWidth: border.borderInlineStartWidth,\n  borderEndWidth: border.borderInlineEndWidth,\n  borderStartColor: border.borderInlineStartColor,\n  borderEndColor: border.borderInlineEndColor,\n  borderStartStyle: border.borderInlineStartStyle,\n  borderEndStyle: border.borderInlineEndStyle\n});\n/**\n * The prop types for border properties listed above\n */\n//# sourceMappingURL=border.js.map"]},"metadata":{},"sourceType":"module"}