{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { useBoolean, useCallbackRef, useControllableProp, useSafeLayoutEffect } from \"@chakra-ui/hooks\";\nimport { mergeRefs } from \"@chakra-ui/react-utils\";\nimport { callAllHandlers, dataAttr, focus, scheduleMicrotask, warn } from \"@chakra-ui/utils\";\nimport { visuallyHiddenStyle } from \"@chakra-ui/visually-hidden\";\nimport { useCallback, useRef, useState } from \"react\";\n/**\n * useCheckbox that provides all the state and focus management logic\n * for a checkbox. It is consumed by the `Checkbox` component\n *\n * @see Docs https://chakra-ui.com/docs/form/checkbox#hooks\n */\n\nexport function useCheckbox(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var {\n    defaultIsChecked,\n    defaultChecked = defaultIsChecked,\n    isChecked: checkedProp,\n    isFocusable,\n    isDisabled,\n    isReadOnly,\n    isRequired,\n    onChange,\n    isIndeterminate,\n    isInvalid,\n    name,\n    value,\n    id,\n    onBlur,\n    onFocus,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-invalid\": ariaInvalid,\n    \"aria-describedby\": ariaDescribedBy\n  } = props,\n      htmlProps = _objectWithoutPropertiesLoose(props, [\"defaultIsChecked\", \"defaultChecked\", \"isChecked\", \"isFocusable\", \"isDisabled\", \"isReadOnly\", \"isRequired\", \"onChange\", \"isIndeterminate\", \"isInvalid\", \"name\", \"value\", \"id\", \"onBlur\", \"onFocus\", \"aria-label\", \"aria-labelledby\", \"aria-invalid\", \"aria-describedby\"]);\n\n  var onChangeProp = useCallbackRef(onChange);\n  var onBlurProp = useCallbackRef(onBlur);\n  var onFocusProp = useCallbackRef(onFocus);\n  var [isFocused, setFocused] = useBoolean();\n  var [isHovered, setHovered] = useBoolean();\n  var [isActive, setActive] = useBoolean();\n  var inputRef = useRef(null);\n  var [rootIsLabelElement, setRootIsLabelElement] = useState(true);\n  var [checkedState, setCheckedState] = useState(!!defaultChecked);\n  var [isControlled, isChecked] = useControllableProp(checkedProp, checkedState);\n  warn({\n    condition: !!defaultIsChecked,\n    message: 'The \"defaultIsChecked\" prop has been deprecated and will be removed in a future version. ' + 'Please use the \"defaultChecked\" prop instead, which mirrors default React checkbox behavior.'\n  });\n  var handleChange = useCallback(event => {\n    if (isReadOnly || isDisabled) {\n      event.preventDefault();\n      return;\n    }\n\n    if (!isControlled) {\n      if (isChecked) {\n        setCheckedState(event.target.checked);\n      } else {\n        setCheckedState(isIndeterminate ? true : event.target.checked);\n      }\n    }\n\n    onChangeProp == null ? void 0 : onChangeProp(event);\n  }, [isReadOnly, isDisabled, isChecked, isControlled, isIndeterminate, onChangeProp]);\n  useSafeLayoutEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = Boolean(isIndeterminate);\n    }\n  }, [isIndeterminate]);\n  var trulyDisabled = isDisabled && !isFocusable;\n  var onKeyDown = useCallback(event => {\n    if (event.key === \" \") {\n      setActive.on();\n    }\n  }, [setActive]);\n  var onKeyUp = useCallback(event => {\n    if (event.key === \" \") {\n      setActive.off();\n    }\n  }, [setActive]);\n  /**\n   * Sync state with uncontrolled form libraries like `react-hook-form`.\n   *\n   * These libraries set the checked value for input fields\n   * using their refs. For the checkbox, it sets `ref.current.checked = true | false` directly.\n   *\n   * This means the `isChecked` state will get out of sync with `ref.current.checked`,\n   * even though the input validation with work, the UI will not be up to date.\n   *\n   * Let's correct that by checking and syncing the state accordingly.\n   */\n\n  useSafeLayoutEffect(() => {\n    if (!inputRef.current) return;\n    var notInSync = inputRef.current.checked !== isChecked;\n\n    if (notInSync) {\n      setCheckedState(inputRef.current.checked);\n    }\n  }, [inputRef.current]);\n  var getCheckboxProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    var onPressDown = event => {\n      // On mousedown, the input blurs and returns focus to the `body`,\n      // we need to prevent this. Native checkboxes keeps focus on `input`\n      event.preventDefault();\n      setActive.on();\n    };\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      \"data-active\": dataAttr(isActive),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-indeterminate\": dataAttr(isIndeterminate),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      \"aria-hidden\": true,\n      onMouseDown: callAllHandlers(props.onMouseDown, onPressDown),\n      onMouseUp: callAllHandlers(props.onMouseUp, setActive.off),\n      onMouseEnter: callAllHandlers(props.onMouseEnter, setHovered.on),\n      onMouseLeave: callAllHandlers(props.onMouseLeave, setHovered.off)\n    });\n  }, [isActive, isChecked, isDisabled, isFocused, isHovered, isIndeterminate, isInvalid, isReadOnly, setActive, setHovered.off, setHovered.on]);\n  var getRootProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, htmlProps, props, {\n      ref: mergeRefs(forwardedRef, node => {\n        if (!node) return;\n        setRootIsLabelElement(node.tagName === \"LABEL\");\n      }),\n      onClick: callAllHandlers(props.onClick, () => {\n        /**\n         * Accessibility:\n         *\n         * Ideally, `getRootProps` should be spread unto a `label` element.\n         *\n         * If the element was changed using the `as` prop or changing\n         * the dom node `getRootProps` is spread unto (to a `div` or `span`), we'll trigger\n         * click on the input when the element is clicked.\n         * @see Issue https://github.com/chakra-ui/chakra-ui/issues/3480\n         */\n        if (!rootIsLabelElement) {\n          var _inputRef$current;\n\n          (_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.click();\n          focus(inputRef.current, {\n            nextTick: true\n          });\n        }\n      }),\n      \"data-disabled\": dataAttr(isDisabled)\n    });\n  }, [htmlProps, isDisabled, rootIsLabelElement]);\n  var getInputProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    var onFocus = () => {\n      scheduleMicrotask(setFocused.on);\n    };\n\n    return _extends({}, props, {\n      ref: mergeRefs(inputRef, forwardedRef),\n      type: \"checkbox\",\n      name,\n      value,\n      id,\n      onChange: callAllHandlers(props.onChange, handleChange),\n      onBlur: callAllHandlers(props.onBlur, onBlurProp, setFocused.off),\n      onFocus: callAllHandlers(props.onFocus, onFocusProp, onFocus),\n      onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n      onKeyUp: callAllHandlers(props.onKeyUp, onKeyUp),\n      required: isRequired,\n      checked: isChecked,\n      disabled: trulyDisabled,\n      readOnly: isReadOnly,\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-invalid\": ariaInvalid ? Boolean(ariaInvalid) : isInvalid,\n      \"aria-describedby\": ariaDescribedBy,\n      \"aria-disabled\": isDisabled,\n      style: visuallyHiddenStyle\n    });\n  }, [name, value, id, handleChange, setFocused.off, setFocused.on, onBlurProp, onFocusProp, onKeyDown, onKeyUp, isRequired, isChecked, trulyDisabled, isReadOnly, ariaLabel, ariaLabelledBy, ariaInvalid, isInvalid, ariaDescribedBy, isDisabled]);\n  var getLabelProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      onMouseDown: callAllHandlers(props.onMouseDown, stopEvent),\n      onTouchStart: callAllHandlers(props.onTouchStart, stopEvent),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid)\n    });\n  }, [isChecked, isDisabled, isInvalid]);\n  return {\n    state: {\n      isInvalid,\n      isFocused,\n      isChecked,\n      isActive,\n      isHovered,\n      isIndeterminate,\n      isDisabled,\n      isReadOnly,\n      isRequired\n    },\n    getRootProps,\n    getCheckboxProps,\n    getInputProps,\n    getLabelProps,\n    htmlProps\n  };\n}\n/**\n * Prevent `onBlur` being fired when the checkbox label is touched\n */\n\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}","map":{"version":3,"sources":["/Users/arifrahman/Code/personal/minting-token/client/node_modules/@chakra-ui/checkbox/dist/esm/use-checkbox.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","useBoolean","useCallbackRef","useControllableProp","useSafeLayoutEffect","mergeRefs","callAllHandlers","dataAttr","focus","scheduleMicrotask","warn","visuallyHiddenStyle","useCallback","useRef","useState","useCheckbox","props","defaultIsChecked","defaultChecked","isChecked","checkedProp","isFocusable","isDisabled","isReadOnly","isRequired","onChange","isIndeterminate","isInvalid","name","value","id","onBlur","onFocus","ariaLabel","ariaLabelledBy","ariaInvalid","ariaDescribedBy","htmlProps","onChangeProp","onBlurProp","onFocusProp","isFocused","setFocused","isHovered","setHovered","isActive","setActive","inputRef","rootIsLabelElement","setRootIsLabelElement","checkedState","setCheckedState","isControlled","condition","message","handleChange","event","preventDefault","checked","current","indeterminate","Boolean","trulyDisabled","onKeyDown","on","onKeyUp","off","notInSync","getCheckboxProps","forwardedRef","onPressDown","ref","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","getRootProps","node","tagName","onClick","_inputRef$current","click","nextTick","getInputProps","type","required","disabled","readOnly","style","getLabelProps","stopEvent","onTouchStart","state","stopPropagation"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useBoolean, useCallbackRef, useControllableProp, useSafeLayoutEffect } from \"@chakra-ui/hooks\";\nimport { mergeRefs } from \"@chakra-ui/react-utils\";\nimport { callAllHandlers, dataAttr, focus, scheduleMicrotask, warn } from \"@chakra-ui/utils\";\nimport { visuallyHiddenStyle } from \"@chakra-ui/visually-hidden\";\nimport { useCallback, useRef, useState } from \"react\";\n\n/**\n * useCheckbox that provides all the state and focus management logic\n * for a checkbox. It is consumed by the `Checkbox` component\n *\n * @see Docs https://chakra-ui.com/docs/form/checkbox#hooks\n */\nexport function useCheckbox(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var {\n    defaultIsChecked,\n    defaultChecked = defaultIsChecked,\n    isChecked: checkedProp,\n    isFocusable,\n    isDisabled,\n    isReadOnly,\n    isRequired,\n    onChange,\n    isIndeterminate,\n    isInvalid,\n    name,\n    value,\n    id,\n    onBlur,\n    onFocus,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-invalid\": ariaInvalid,\n    \"aria-describedby\": ariaDescribedBy\n  } = props,\n      htmlProps = _objectWithoutPropertiesLoose(props, [\"defaultIsChecked\", \"defaultChecked\", \"isChecked\", \"isFocusable\", \"isDisabled\", \"isReadOnly\", \"isRequired\", \"onChange\", \"isIndeterminate\", \"isInvalid\", \"name\", \"value\", \"id\", \"onBlur\", \"onFocus\", \"aria-label\", \"aria-labelledby\", \"aria-invalid\", \"aria-describedby\"]);\n\n  var onChangeProp = useCallbackRef(onChange);\n  var onBlurProp = useCallbackRef(onBlur);\n  var onFocusProp = useCallbackRef(onFocus);\n  var [isFocused, setFocused] = useBoolean();\n  var [isHovered, setHovered] = useBoolean();\n  var [isActive, setActive] = useBoolean();\n  var inputRef = useRef(null);\n  var [rootIsLabelElement, setRootIsLabelElement] = useState(true);\n  var [checkedState, setCheckedState] = useState(!!defaultChecked);\n  var [isControlled, isChecked] = useControllableProp(checkedProp, checkedState);\n  warn({\n    condition: !!defaultIsChecked,\n    message: 'The \"defaultIsChecked\" prop has been deprecated and will be removed in a future version. ' + 'Please use the \"defaultChecked\" prop instead, which mirrors default React checkbox behavior.'\n  });\n  var handleChange = useCallback(event => {\n    if (isReadOnly || isDisabled) {\n      event.preventDefault();\n      return;\n    }\n\n    if (!isControlled) {\n      if (isChecked) {\n        setCheckedState(event.target.checked);\n      } else {\n        setCheckedState(isIndeterminate ? true : event.target.checked);\n      }\n    }\n\n    onChangeProp == null ? void 0 : onChangeProp(event);\n  }, [isReadOnly, isDisabled, isChecked, isControlled, isIndeterminate, onChangeProp]);\n  useSafeLayoutEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = Boolean(isIndeterminate);\n    }\n  }, [isIndeterminate]);\n  var trulyDisabled = isDisabled && !isFocusable;\n  var onKeyDown = useCallback(event => {\n    if (event.key === \" \") {\n      setActive.on();\n    }\n  }, [setActive]);\n  var onKeyUp = useCallback(event => {\n    if (event.key === \" \") {\n      setActive.off();\n    }\n  }, [setActive]);\n  /**\n   * Sync state with uncontrolled form libraries like `react-hook-form`.\n   *\n   * These libraries set the checked value for input fields\n   * using their refs. For the checkbox, it sets `ref.current.checked = true | false` directly.\n   *\n   * This means the `isChecked` state will get out of sync with `ref.current.checked`,\n   * even though the input validation with work, the UI will not be up to date.\n   *\n   * Let's correct that by checking and syncing the state accordingly.\n   */\n\n  useSafeLayoutEffect(() => {\n    if (!inputRef.current) return;\n    var notInSync = inputRef.current.checked !== isChecked;\n\n    if (notInSync) {\n      setCheckedState(inputRef.current.checked);\n    }\n  }, [inputRef.current]);\n  var getCheckboxProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    var onPressDown = event => {\n      // On mousedown, the input blurs and returns focus to the `body`,\n      // we need to prevent this. Native checkboxes keeps focus on `input`\n      event.preventDefault();\n      setActive.on();\n    };\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      \"data-active\": dataAttr(isActive),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-indeterminate\": dataAttr(isIndeterminate),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      \"aria-hidden\": true,\n      onMouseDown: callAllHandlers(props.onMouseDown, onPressDown),\n      onMouseUp: callAllHandlers(props.onMouseUp, setActive.off),\n      onMouseEnter: callAllHandlers(props.onMouseEnter, setHovered.on),\n      onMouseLeave: callAllHandlers(props.onMouseLeave, setHovered.off)\n    });\n  }, [isActive, isChecked, isDisabled, isFocused, isHovered, isIndeterminate, isInvalid, isReadOnly, setActive, setHovered.off, setHovered.on]);\n  var getRootProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, htmlProps, props, {\n      ref: mergeRefs(forwardedRef, node => {\n        if (!node) return;\n        setRootIsLabelElement(node.tagName === \"LABEL\");\n      }),\n      onClick: callAllHandlers(props.onClick, () => {\n        /**\n         * Accessibility:\n         *\n         * Ideally, `getRootProps` should be spread unto a `label` element.\n         *\n         * If the element was changed using the `as` prop or changing\n         * the dom node `getRootProps` is spread unto (to a `div` or `span`), we'll trigger\n         * click on the input when the element is clicked.\n         * @see Issue https://github.com/chakra-ui/chakra-ui/issues/3480\n         */\n        if (!rootIsLabelElement) {\n          var _inputRef$current;\n\n          (_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.click();\n          focus(inputRef.current, {\n            nextTick: true\n          });\n        }\n      }),\n      \"data-disabled\": dataAttr(isDisabled)\n    });\n  }, [htmlProps, isDisabled, rootIsLabelElement]);\n  var getInputProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    var onFocus = () => {\n      scheduleMicrotask(setFocused.on);\n    };\n\n    return _extends({}, props, {\n      ref: mergeRefs(inputRef, forwardedRef),\n      type: \"checkbox\",\n      name,\n      value,\n      id,\n      onChange: callAllHandlers(props.onChange, handleChange),\n      onBlur: callAllHandlers(props.onBlur, onBlurProp, setFocused.off),\n      onFocus: callAllHandlers(props.onFocus, onFocusProp, onFocus),\n      onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n      onKeyUp: callAllHandlers(props.onKeyUp, onKeyUp),\n      required: isRequired,\n      checked: isChecked,\n      disabled: trulyDisabled,\n      readOnly: isReadOnly,\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-invalid\": ariaInvalid ? Boolean(ariaInvalid) : isInvalid,\n      \"aria-describedby\": ariaDescribedBy,\n      \"aria-disabled\": isDisabled,\n      style: visuallyHiddenStyle\n    });\n  }, [name, value, id, handleChange, setFocused.off, setFocused.on, onBlurProp, onFocusProp, onKeyDown, onKeyUp, isRequired, isChecked, trulyDisabled, isReadOnly, ariaLabel, ariaLabelledBy, ariaInvalid, isInvalid, ariaDescribedBy, isDisabled]);\n  var getLabelProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      onMouseDown: callAllHandlers(props.onMouseDown, stopEvent),\n      onTouchStart: callAllHandlers(props.onTouchStart, stopEvent),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid)\n    });\n  }, [isChecked, isDisabled, isInvalid]);\n  return {\n    state: {\n      isInvalid,\n      isFocused,\n      isChecked,\n      isActive,\n      isHovered,\n      isIndeterminate,\n      isDisabled,\n      isReadOnly,\n      isRequired\n    },\n    getRootProps,\n    getCheckboxProps,\n    getInputProps,\n    getLabelProps,\n    htmlProps\n  };\n}\n/**\n * Prevent `onBlur` being fired when the checkbox label is touched\n */\n\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n//# sourceMappingURL=use-checkbox.js.map"]},"metadata":{},"sourceType":"module"}