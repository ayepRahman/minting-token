{"ast":null,"code":"import { __DEV__ } from \"@chakra-ui/utils\";\nimport { createContext } from \"@chakra-ui/react-utils\";\nimport * as React from \"react\";\nimport { useCheckboxGroup } from \"./use-checkbox-group\";\nvar [CheckboxGroupProvider, useCheckboxGroupContext] = createContext({\n  name: \"CheckboxGroupContext\",\n  strict: false\n});\nexport { useCheckboxGroupContext };\n/**\n * Used for multiple checkboxes which are bound in one group,\n * and it indicates whether one or more options are selected.\n *\n * @see Docs https://chakra-ui.com/docs/form/checkbox\n */\n\nexport var CheckboxGroup = props => {\n  var {\n    colorScheme,\n    size,\n    variant,\n    children,\n    isDisabled\n  } = props;\n  var {\n    value,\n    onChange\n  } = useCheckboxGroup(props);\n  var group = React.useMemo(() => ({\n    size,\n    onChange,\n    colorScheme,\n    value,\n    variant,\n    isDisabled\n  }), [size, onChange, colorScheme, value, variant, isDisabled]);\n  return /*#__PURE__*/React.createElement(CheckboxGroupProvider, {\n    value: group\n  }, children);\n};\n\nif (__DEV__) {\n  CheckboxGroup.displayName = \"CheckboxGroup\";\n}","map":{"version":3,"sources":["/Users/arifrahman/Code/personal/minting-token/client/node_modules/@chakra-ui/checkbox/dist/esm/checkbox-group.js"],"names":["__DEV__","createContext","React","useCheckboxGroup","CheckboxGroupProvider","useCheckboxGroupContext","name","strict","CheckboxGroup","props","colorScheme","size","variant","children","isDisabled","value","onChange","group","useMemo","createElement","displayName"],"mappings":"AAAA,SAASA,OAAT,QAAwB,kBAAxB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,IAAI,CAACC,qBAAD,EAAwBC,uBAAxB,IAAmDJ,aAAa,CAAC;AACnEK,EAAAA,IAAI,EAAE,sBAD6D;AAEnEC,EAAAA,MAAM,EAAE;AAF2D,CAAD,CAApE;AAIA,SAASF,uBAAT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIG,aAAa,GAAGC,KAAK,IAAI;AAClC,MAAI;AACFC,IAAAA,WADE;AAEFC,IAAAA,IAFE;AAGFC,IAAAA,OAHE;AAIFC,IAAAA,QAJE;AAKFC,IAAAA;AALE,MAMAL,KANJ;AAOA,MAAI;AACFM,IAAAA,KADE;AAEFC,IAAAA;AAFE,MAGAb,gBAAgB,CAACM,KAAD,CAHpB;AAIA,MAAIQ,KAAK,GAAGf,KAAK,CAACgB,OAAN,CAAc,OAAO;AAC/BP,IAAAA,IAD+B;AAE/BK,IAAAA,QAF+B;AAG/BN,IAAAA,WAH+B;AAI/BK,IAAAA,KAJ+B;AAK/BH,IAAAA,OAL+B;AAM/BE,IAAAA;AAN+B,GAAP,CAAd,EAOR,CAACH,IAAD,EAAOK,QAAP,EAAiBN,WAAjB,EAA8BK,KAA9B,EAAqCH,OAArC,EAA8CE,UAA9C,CAPQ,CAAZ;AAQA,SAAO,aAAaZ,KAAK,CAACiB,aAAN,CAAoBf,qBAApB,EAA2C;AAC7DW,IAAAA,KAAK,EAAEE;AADsD,GAA3C,EAEjBJ,QAFiB,CAApB;AAGD,CAvBM;;AAyBP,IAAIb,OAAJ,EAAa;AACXQ,EAAAA,aAAa,CAACY,WAAd,GAA4B,eAA5B;AACD","sourcesContent":["import { __DEV__ } from \"@chakra-ui/utils\";\nimport { createContext } from \"@chakra-ui/react-utils\";\nimport * as React from \"react\";\nimport { useCheckboxGroup } from \"./use-checkbox-group\";\nvar [CheckboxGroupProvider, useCheckboxGroupContext] = createContext({\n  name: \"CheckboxGroupContext\",\n  strict: false\n});\nexport { useCheckboxGroupContext };\n/**\n * Used for multiple checkboxes which are bound in one group,\n * and it indicates whether one or more options are selected.\n *\n * @see Docs https://chakra-ui.com/docs/form/checkbox\n */\n\nexport var CheckboxGroup = props => {\n  var {\n    colorScheme,\n    size,\n    variant,\n    children,\n    isDisabled\n  } = props;\n  var {\n    value,\n    onChange\n  } = useCheckboxGroup(props);\n  var group = React.useMemo(() => ({\n    size,\n    onChange,\n    colorScheme,\n    value,\n    variant,\n    isDisabled\n  }), [size, onChange, colorScheme, value, variant, isDisabled]);\n  return /*#__PURE__*/React.createElement(CheckboxGroupProvider, {\n    value: group\n  }, children);\n};\n\nif (__DEV__) {\n  CheckboxGroup.displayName = \"CheckboxGroup\";\n}\n//# sourceMappingURL=checkbox-group.js.map"]},"metadata":{},"sourceType":"module"}