{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { chakra } from \"@chakra-ui/system\";\nimport { motion } from \"framer-motion\";\nimport { mergeWith } from \"@chakra-ui/utils\";\nimport React from \"react\";\nimport { usePopoverContext } from \"./popover-context\"; // TODO: consider moving this to some util\n\nvar mergeVariants = variants => {\n  if (!variants) return;\n  return mergeWith(variants, {\n    enter: {\n      visibility: \"visible\"\n    },\n    exit: {\n      transitionEnd: {\n        visibility: \"hidden\"\n      }\n    }\n  });\n};\n\nvar scaleFade = {\n  exit: {\n    opacity: 0,\n    scale: 0.95,\n    transition: {\n      duration: 0.1,\n      ease: [0.4, 0, 1, 1]\n    }\n  },\n  enter: {\n    scale: 1,\n    opacity: 1,\n    transition: {\n      duration: 0.15,\n      ease: [0, 0, 0.2, 1]\n    }\n  }\n};\nvar Section = motion(chakra.section);\nexport var PopoverTransition = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n    isOpen\n  } = usePopoverContext();\n  return /*#__PURE__*/React.createElement(Section, _extends({\n    ref: ref,\n    variants: mergeVariants(props.variants)\n  }, props, {\n    initial: false,\n    animate: isOpen ? \"enter\" : \"exit\"\n  }));\n});\nPopoverTransition.defaultProps = {\n  variants: scaleFade\n};","map":{"version":3,"sources":["/Users/arifrahman/Code/personal/minting-token/client/node_modules/@chakra-ui/popover/dist/esm/popover-transition.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","chakra","motion","mergeWith","React","usePopoverContext","mergeVariants","variants","enter","visibility","exit","transitionEnd","scaleFade","opacity","scale","transition","duration","ease","Section","section","PopoverTransition","forwardRef","props","ref","isOpen","createElement","initial","animate","defaultProps"],"mappings":"AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,SAASQ,MAAT,QAAuB,mBAAvB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,mBAAlC,C,CAAuD;;AAEvD,IAAIC,aAAa,GAAGC,QAAQ,IAAI;AAC9B,MAAI,CAACA,QAAL,EAAe;AACf,SAAOJ,SAAS,CAACI,QAAD,EAAW;AACzBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AADP,KADkB;AAIzBC,IAAAA,IAAI,EAAE;AACJC,MAAAA,aAAa,EAAE;AACbF,QAAAA,UAAU,EAAE;AADC;AADX;AAJmB,GAAX,CAAhB;AAUD,CAZD;;AAcA,IAAIG,SAAS,GAAG;AACdF,EAAAA,IAAI,EAAE;AACJG,IAAAA,OAAO,EAAE,CADL;AAEJC,IAAAA,KAAK,EAAE,IAFH;AAGJC,IAAAA,UAAU,EAAE;AACVC,MAAAA,QAAQ,EAAE,GADA;AAEVC,MAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,EAAY,CAAZ;AAFI;AAHR,GADQ;AASdT,EAAAA,KAAK,EAAE;AACLM,IAAAA,KAAK,EAAE,CADF;AAELD,IAAAA,OAAO,EAAE,CAFJ;AAGLE,IAAAA,UAAU,EAAE;AACVC,MAAAA,QAAQ,EAAE,IADA;AAEVC,MAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,GAAP,EAAY,CAAZ;AAFI;AAHP;AATO,CAAhB;AAkBA,IAAIC,OAAO,GAAGhB,MAAM,CAACD,MAAM,CAACkB,OAAR,CAApB;AACA,OAAO,IAAIC,iBAAiB,GAAG,aAAahB,KAAK,CAACiB,UAAN,CAAiB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC3E,MAAI;AACFC,IAAAA;AADE,MAEAnB,iBAAiB,EAFrB;AAGA,SAAO,aAAaD,KAAK,CAACqB,aAAN,CAAoBP,OAApB,EAA6B9B,QAAQ,CAAC;AACxDmC,IAAAA,GAAG,EAAEA,GADmD;AAExDhB,IAAAA,QAAQ,EAAED,aAAa,CAACgB,KAAK,CAACf,QAAP;AAFiC,GAAD,EAGtDe,KAHsD,EAG/C;AACRI,IAAAA,OAAO,EAAE,KADD;AAERC,IAAAA,OAAO,EAAEH,MAAM,GAAG,OAAH,GAAa;AAFpB,GAH+C,CAArC,CAApB;AAOD,CAX2C,CAArC;AAYPJ,iBAAiB,CAACQ,YAAlB,GAAiC;AAC/BrB,EAAAA,QAAQ,EAAEK;AADqB,CAAjC","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { chakra } from \"@chakra-ui/system\";\nimport { motion } from \"framer-motion\";\nimport { mergeWith } from \"@chakra-ui/utils\";\nimport React from \"react\";\nimport { usePopoverContext } from \"./popover-context\"; // TODO: consider moving this to some util\n\nvar mergeVariants = variants => {\n  if (!variants) return;\n  return mergeWith(variants, {\n    enter: {\n      visibility: \"visible\"\n    },\n    exit: {\n      transitionEnd: {\n        visibility: \"hidden\"\n      }\n    }\n  });\n};\n\nvar scaleFade = {\n  exit: {\n    opacity: 0,\n    scale: 0.95,\n    transition: {\n      duration: 0.1,\n      ease: [0.4, 0, 1, 1]\n    }\n  },\n  enter: {\n    scale: 1,\n    opacity: 1,\n    transition: {\n      duration: 0.15,\n      ease: [0, 0, 0.2, 1]\n    }\n  }\n};\nvar Section = motion(chakra.section);\nexport var PopoverTransition = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n    isOpen\n  } = usePopoverContext();\n  return /*#__PURE__*/React.createElement(Section, _extends({\n    ref: ref,\n    variants: mergeVariants(props.variants)\n  }, props, {\n    initial: false,\n    animate: isOpen ? \"enter\" : \"exit\"\n  }));\n});\nPopoverTransition.defaultProps = {\n  variants: scaleFade\n};\n//# sourceMappingURL=popover-transition.js.map"]},"metadata":{},"sourceType":"module"}