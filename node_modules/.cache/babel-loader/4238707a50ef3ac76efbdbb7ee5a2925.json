{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { useControllableState, useFocusOnPointerDown, useUpdateEffect } from \"@chakra-ui/hooks\";\nimport { mergeRefs } from \"@chakra-ui/react-utils\";\nimport { ariaAttr, callAllHandlers, contains, focus, getRelatedTarget, isEmpty, normalizeEventKey } from \"@chakra-ui/utils\";\nimport { useCallback, useRef, useState } from \"react\";\n/**\n * React hook for managing the inline renaming of some text.\n *\n * @see Docs https://chakra-ui.com/docs/editable\n */\n\nexport function useEditable(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var {\n    onChange: onChangeProp,\n    onCancel: onCancelProp,\n    onSubmit: onSubmitProp,\n    value: valueProp,\n    isDisabled,\n    defaultValue,\n    startWithEditView,\n    isPreviewFocusable = true,\n    submitOnBlur = true,\n    selectAllOnFocus = true,\n    placeholder,\n    onEdit: onEditProp\n  } = props,\n      htmlProps = _objectWithoutPropertiesLoose(props, [\"onChange\", \"onCancel\", \"onSubmit\", \"value\", \"isDisabled\", \"defaultValue\", \"startWithEditView\", \"isPreviewFocusable\", \"submitOnBlur\", \"selectAllOnFocus\", \"placeholder\", \"onEdit\"]);\n\n  var defaultIsEditing = Boolean(startWithEditView && !isDisabled);\n  var [isEditing, setIsEditing] = useState(defaultIsEditing);\n  var [value, setValue] = useControllableState({\n    defaultValue: defaultValue || \"\",\n    value: valueProp,\n    onChange: onChangeProp\n  });\n  /**\n   * Keep track of the previous value, so if users\n   * presses `cancel`, we can revert to it.\n   */\n\n  var [prevValue, setPrevValue] = useState(value);\n  /**\n   * Ref to help focus the input in edit mode\n   */\n\n  var inputRef = useRef(null);\n  var previewRef = useRef(null);\n  var editButtonRef = useRef(null);\n  var cancelButtonRef = useRef(null);\n  var submitButtonRef = useRef(null);\n  useFocusOnPointerDown({\n    ref: inputRef,\n    enabled: isEditing,\n    elements: [cancelButtonRef, submitButtonRef]\n  });\n  var isInteractive = !isEditing || !isDisabled;\n  useUpdateEffect(() => {\n    if (!isEditing) {\n      focus(editButtonRef.current);\n      return;\n    }\n\n    focus(inputRef.current, {\n      selectTextIfInput: selectAllOnFocus\n    });\n    onEditProp == null ? void 0 : onEditProp();\n  }, [isEditing, onEditProp, selectAllOnFocus]);\n  var onEdit = useCallback(() => {\n    if (isInteractive) {\n      setIsEditing(true);\n    }\n  }, [isInteractive]);\n  var onCancel = useCallback(() => {\n    setIsEditing(false);\n    setValue(prevValue);\n    onCancelProp == null ? void 0 : onCancelProp(prevValue);\n  }, [onCancelProp, setValue, prevValue]);\n  var onSubmit = useCallback(() => {\n    setIsEditing(false);\n    setPrevValue(value);\n    onSubmitProp == null ? void 0 : onSubmitProp(value);\n  }, [value, onSubmitProp]);\n  var onChange = useCallback(event => {\n    setValue(event.target.value);\n  }, [setValue]);\n  var onKeyDown = useCallback(event => {\n    var eventKey = normalizeEventKey(event);\n    var keyMap = {\n      Escape: onCancel,\n      Enter: event => {\n        if (!event.shiftKey && !event.metaKey) {\n          onSubmit();\n        }\n      }\n    };\n    var action = keyMap[eventKey];\n\n    if (action) {\n      event.preventDefault();\n      action(event);\n    }\n  }, [onCancel, onSubmit]);\n  var isValueEmpty = isEmpty(value);\n  var onBlur = useCallback(event => {\n    var relatedTarget = getRelatedTarget(event);\n    var targetIsCancel = contains(cancelButtonRef.current, relatedTarget);\n    var targetIsSubmit = contains(submitButtonRef.current, relatedTarget);\n    var isValidBlur = !targetIsCancel && !targetIsSubmit;\n\n    if (isValidBlur && submitOnBlur) {\n      onSubmit();\n    }\n  }, [submitOnBlur, onSubmit]);\n  var getPreviewProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    var tabIndex = isInteractive && isPreviewFocusable ? 0 : undefined;\n    return _extends({}, props, {\n      ref: mergeRefs(ref, previewRef),\n      children: isValueEmpty ? placeholder : value,\n      hidden: isEditing,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      tabIndex,\n      onFocus: callAllHandlers(props.onFocus, onEdit)\n    });\n  }, [isDisabled, isEditing, isInteractive, isPreviewFocusable, isValueEmpty, onEdit, placeholder, value]);\n  var getInputProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({}, props, {\n      hidden: !isEditing,\n      placeholder,\n      ref: mergeRefs(ref, inputRef),\n      disabled: isDisabled,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      value,\n      onBlur: callAllHandlers(props.onBlur, onBlur),\n      onChange: callAllHandlers(props.onChange, onChange),\n      onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown)\n    });\n  }, [isDisabled, isEditing, onBlur, onChange, onKeyDown, placeholder, value]);\n  var getEditButtonProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({\n      \"aria-label\": \"Edit\"\n    }, props, {\n      type: \"button\",\n      onClick: callAllHandlers(props.onClick, onEdit),\n      ref: mergeRefs(ref, editButtonRef)\n    });\n  }, [onEdit]);\n  var getSubmitButtonProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({}, props, {\n      \"aria-label\": \"Submit\",\n      ref: mergeRefs(submitButtonRef, ref),\n      type: \"button\",\n      onClick: callAllHandlers(props.onClick, onSubmit)\n    });\n  }, [onSubmit]);\n  var getCancelButtonProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({\n      \"aria-label\": \"Cancel\",\n      id: \"cancel\"\n    }, props, {\n      ref: mergeRefs(cancelButtonRef, ref),\n      type: \"button\",\n      onClick: callAllHandlers(props.onClick, onCancel)\n    });\n  }, [onCancel]);\n  return {\n    isEditing,\n    isDisabled,\n    isValueEmpty,\n    value,\n    onEdit,\n    onCancel,\n    onSubmit,\n    getPreviewProps,\n    getInputProps,\n    getEditButtonProps,\n    getSubmitButtonProps,\n    getCancelButtonProps,\n    htmlProps\n  };\n}","map":{"version":3,"sources":["/Users/arifrahman/Code/personal/minting-token/client/node_modules/@chakra-ui/editable/dist/esm/use-editable.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","useControllableState","useFocusOnPointerDown","useUpdateEffect","mergeRefs","ariaAttr","callAllHandlers","contains","focus","getRelatedTarget","isEmpty","normalizeEventKey","useCallback","useRef","useState","useEditable","props","onChange","onChangeProp","onCancel","onCancelProp","onSubmit","onSubmitProp","value","valueProp","isDisabled","defaultValue","startWithEditView","isPreviewFocusable","submitOnBlur","selectAllOnFocus","placeholder","onEdit","onEditProp","htmlProps","defaultIsEditing","Boolean","isEditing","setIsEditing","setValue","prevValue","setPrevValue","inputRef","previewRef","editButtonRef","cancelButtonRef","submitButtonRef","ref","enabled","elements","isInteractive","current","selectTextIfInput","event","onKeyDown","eventKey","keyMap","Escape","Enter","shiftKey","metaKey","action","preventDefault","isValueEmpty","onBlur","relatedTarget","targetIsCancel","targetIsSubmit","isValidBlur","getPreviewProps","tabIndex","undefined","children","hidden","onFocus","getInputProps","disabled","getEditButtonProps","type","onClick","getSubmitButtonProps","getCancelButtonProps","id"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useControllableState, useFocusOnPointerDown, useUpdateEffect } from \"@chakra-ui/hooks\";\nimport { mergeRefs } from \"@chakra-ui/react-utils\";\nimport { ariaAttr, callAllHandlers, contains, focus, getRelatedTarget, isEmpty, normalizeEventKey } from \"@chakra-ui/utils\";\nimport { useCallback, useRef, useState } from \"react\";\n\n/**\n * React hook for managing the inline renaming of some text.\n *\n * @see Docs https://chakra-ui.com/docs/editable\n */\nexport function useEditable(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var {\n    onChange: onChangeProp,\n    onCancel: onCancelProp,\n    onSubmit: onSubmitProp,\n    value: valueProp,\n    isDisabled,\n    defaultValue,\n    startWithEditView,\n    isPreviewFocusable = true,\n    submitOnBlur = true,\n    selectAllOnFocus = true,\n    placeholder,\n    onEdit: onEditProp\n  } = props,\n      htmlProps = _objectWithoutPropertiesLoose(props, [\"onChange\", \"onCancel\", \"onSubmit\", \"value\", \"isDisabled\", \"defaultValue\", \"startWithEditView\", \"isPreviewFocusable\", \"submitOnBlur\", \"selectAllOnFocus\", \"placeholder\", \"onEdit\"]);\n\n  var defaultIsEditing = Boolean(startWithEditView && !isDisabled);\n  var [isEditing, setIsEditing] = useState(defaultIsEditing);\n  var [value, setValue] = useControllableState({\n    defaultValue: defaultValue || \"\",\n    value: valueProp,\n    onChange: onChangeProp\n  });\n  /**\n   * Keep track of the previous value, so if users\n   * presses `cancel`, we can revert to it.\n   */\n\n  var [prevValue, setPrevValue] = useState(value);\n  /**\n   * Ref to help focus the input in edit mode\n   */\n\n  var inputRef = useRef(null);\n  var previewRef = useRef(null);\n  var editButtonRef = useRef(null);\n  var cancelButtonRef = useRef(null);\n  var submitButtonRef = useRef(null);\n  useFocusOnPointerDown({\n    ref: inputRef,\n    enabled: isEditing,\n    elements: [cancelButtonRef, submitButtonRef]\n  });\n  var isInteractive = !isEditing || !isDisabled;\n  useUpdateEffect(() => {\n    if (!isEditing) {\n      focus(editButtonRef.current);\n      return;\n    }\n\n    focus(inputRef.current, {\n      selectTextIfInput: selectAllOnFocus\n    });\n    onEditProp == null ? void 0 : onEditProp();\n  }, [isEditing, onEditProp, selectAllOnFocus]);\n  var onEdit = useCallback(() => {\n    if (isInteractive) {\n      setIsEditing(true);\n    }\n  }, [isInteractive]);\n  var onCancel = useCallback(() => {\n    setIsEditing(false);\n    setValue(prevValue);\n    onCancelProp == null ? void 0 : onCancelProp(prevValue);\n  }, [onCancelProp, setValue, prevValue]);\n  var onSubmit = useCallback(() => {\n    setIsEditing(false);\n    setPrevValue(value);\n    onSubmitProp == null ? void 0 : onSubmitProp(value);\n  }, [value, onSubmitProp]);\n  var onChange = useCallback(event => {\n    setValue(event.target.value);\n  }, [setValue]);\n  var onKeyDown = useCallback(event => {\n    var eventKey = normalizeEventKey(event);\n    var keyMap = {\n      Escape: onCancel,\n      Enter: event => {\n        if (!event.shiftKey && !event.metaKey) {\n          onSubmit();\n        }\n      }\n    };\n    var action = keyMap[eventKey];\n\n    if (action) {\n      event.preventDefault();\n      action(event);\n    }\n  }, [onCancel, onSubmit]);\n  var isValueEmpty = isEmpty(value);\n  var onBlur = useCallback(event => {\n    var relatedTarget = getRelatedTarget(event);\n    var targetIsCancel = contains(cancelButtonRef.current, relatedTarget);\n    var targetIsSubmit = contains(submitButtonRef.current, relatedTarget);\n    var isValidBlur = !targetIsCancel && !targetIsSubmit;\n\n    if (isValidBlur && submitOnBlur) {\n      onSubmit();\n    }\n  }, [submitOnBlur, onSubmit]);\n  var getPreviewProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    var tabIndex = isInteractive && isPreviewFocusable ? 0 : undefined;\n    return _extends({}, props, {\n      ref: mergeRefs(ref, previewRef),\n      children: isValueEmpty ? placeholder : value,\n      hidden: isEditing,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      tabIndex,\n      onFocus: callAllHandlers(props.onFocus, onEdit)\n    });\n  }, [isDisabled, isEditing, isInteractive, isPreviewFocusable, isValueEmpty, onEdit, placeholder, value]);\n  var getInputProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({}, props, {\n      hidden: !isEditing,\n      placeholder,\n      ref: mergeRefs(ref, inputRef),\n      disabled: isDisabled,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      value,\n      onBlur: callAllHandlers(props.onBlur, onBlur),\n      onChange: callAllHandlers(props.onChange, onChange),\n      onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown)\n    });\n  }, [isDisabled, isEditing, onBlur, onChange, onKeyDown, placeholder, value]);\n  var getEditButtonProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({\n      \"aria-label\": \"Edit\"\n    }, props, {\n      type: \"button\",\n      onClick: callAllHandlers(props.onClick, onEdit),\n      ref: mergeRefs(ref, editButtonRef)\n    });\n  }, [onEdit]);\n  var getSubmitButtonProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({}, props, {\n      \"aria-label\": \"Submit\",\n      ref: mergeRefs(submitButtonRef, ref),\n      type: \"button\",\n      onClick: callAllHandlers(props.onClick, onSubmit)\n    });\n  }, [onSubmit]);\n  var getCancelButtonProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({\n      \"aria-label\": \"Cancel\",\n      id: \"cancel\"\n    }, props, {\n      ref: mergeRefs(cancelButtonRef, ref),\n      type: \"button\",\n      onClick: callAllHandlers(props.onClick, onCancel)\n    });\n  }, [onCancel]);\n  return {\n    isEditing,\n    isDisabled,\n    isValueEmpty,\n    value,\n    onEdit,\n    onCancel,\n    onSubmit,\n    getPreviewProps,\n    getInputProps,\n    getEditButtonProps,\n    getSubmitButtonProps,\n    getCancelButtonProps,\n    htmlProps\n  };\n}\n//# sourceMappingURL=use-editable.js.map"]},"metadata":{},"sourceType":"module"}