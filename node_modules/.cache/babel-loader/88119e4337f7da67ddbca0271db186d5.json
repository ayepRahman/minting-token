{"ast":null,"code":"import { isDark, mode, randomColor } from \"@chakra-ui/theme-tools\";\nimport themeSizes from \"../foundations/sizes\";\nvar parts = [\"container\", \"excessLabel\", \"badge\", \"label\"];\n\nfunction baseStyleBadge(props) {\n  return {\n    transform: \"translate(25%, 25%)\",\n    borderRadius: \"full\",\n    border: \"0.2em solid\",\n    borderColor: mode(\"white\", \"gray.800\")(props)\n  };\n}\n\nfunction baseStyleExcessLabel(props) {\n  return {\n    bg: mode(\"gray.200\", \"whiteAlpha.400\")(props)\n  };\n}\n\nfunction baseStyleContainer(props) {\n  var {\n    name,\n    theme\n  } = props;\n  var bg = name ? randomColor({\n    string: name\n  }) : \"gray.400\";\n  var isBgDark = isDark(bg)(theme);\n  var color = \"white\";\n  if (!isBgDark) color = \"gray.800\";\n  var borderColor = mode(\"white\", \"gray.800\")(props);\n  return {\n    bg,\n    color,\n    borderColor,\n    verticalAlign: \"top\"\n  };\n}\n\nvar baseStyle = props => ({\n  badge: baseStyleBadge(props),\n  excessLabel: baseStyleExcessLabel(props),\n  container: baseStyleContainer(props)\n});\n\nfunction getSize(size) {\n  var themeSize = themeSizes[size];\n  return {\n    container: {\n      width: size,\n      height: size,\n      fontSize: \"calc(\" + (themeSize != null ? themeSize : size) + \" / 2.5)\"\n    },\n    excessLabel: {\n      width: size,\n      height: size\n    },\n    label: {\n      fontSize: \"calc(\" + (themeSize != null ? themeSize : size) + \" / 2.5)\",\n      lineHeight: size !== \"100%\" ? themeSize != null ? themeSize : size : undefined\n    }\n  };\n}\n\nvar sizes = {\n  \"2xs\": getSize(\"4\"),\n  xs: getSize(\"6\"),\n  sm: getSize(\"8\"),\n  md: getSize(\"12\"),\n  lg: getSize(\"16\"),\n  xl: getSize(\"24\"),\n  \"2xl\": getSize(\"32\"),\n  full: getSize(\"100%\")\n};\nvar defaultProps = {\n  size: \"md\"\n};\nexport default {\n  parts,\n  baseStyle,\n  sizes,\n  defaultProps\n};","map":{"version":3,"sources":["/Users/arifrahman/Code/personal/minting-token/client/node_modules/@chakra-ui/theme/dist/esm/components/avatar.js"],"names":["isDark","mode","randomColor","themeSizes","parts","baseStyleBadge","props","transform","borderRadius","border","borderColor","baseStyleExcessLabel","bg","baseStyleContainer","name","theme","string","isBgDark","color","verticalAlign","baseStyle","badge","excessLabel","container","getSize","size","themeSize","width","height","fontSize","label","lineHeight","undefined","sizes","xs","sm","md","lg","xl","full","defaultProps"],"mappings":"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","sourcesContent":["import { isDark, mode, randomColor } from \"@chakra-ui/theme-tools\";\nimport themeSizes from \"../foundations/sizes\";\nvar parts = [\"container\", \"excessLabel\", \"badge\", \"label\"];\n\nfunction baseStyleBadge(props) {\n  return {\n    transform: \"translate(25%, 25%)\",\n    borderRadius: \"full\",\n    border: \"0.2em solid\",\n    borderColor: mode(\"white\", \"gray.800\")(props)\n  };\n}\n\nfunction baseStyleExcessLabel(props) {\n  return {\n    bg: mode(\"gray.200\", \"whiteAlpha.400\")(props)\n  };\n}\n\nfunction baseStyleContainer(props) {\n  var {\n    name,\n    theme\n  } = props;\n  var bg = name ? randomColor({\n    string: name\n  }) : \"gray.400\";\n  var isBgDark = isDark(bg)(theme);\n  var color = \"white\";\n  if (!isBgDark) color = \"gray.800\";\n  var borderColor = mode(\"white\", \"gray.800\")(props);\n  return {\n    bg,\n    color,\n    borderColor,\n    verticalAlign: \"top\"\n  };\n}\n\nvar baseStyle = props => ({\n  badge: baseStyleBadge(props),\n  excessLabel: baseStyleExcessLabel(props),\n  container: baseStyleContainer(props)\n});\n\nfunction getSize(size) {\n  var themeSize = themeSizes[size];\n  return {\n    container: {\n      width: size,\n      height: size,\n      fontSize: \"calc(\" + (themeSize != null ? themeSize : size) + \" / 2.5)\"\n    },\n    excessLabel: {\n      width: size,\n      height: size\n    },\n    label: {\n      fontSize: \"calc(\" + (themeSize != null ? themeSize : size) + \" / 2.5)\",\n      lineHeight: size !== \"100%\" ? themeSize != null ? themeSize : size : undefined\n    }\n  };\n}\n\nvar sizes = {\n  \"2xs\": getSize(\"4\"),\n  xs: getSize(\"6\"),\n  sm: getSize(\"8\"),\n  md: getSize(\"12\"),\n  lg: getSize(\"16\"),\n  xl: getSize(\"24\"),\n  \"2xl\": getSize(\"32\"),\n  full: getSize(\"100%\")\n};\nvar defaultProps = {\n  size: \"md\"\n};\nexport default {\n  parts,\n  baseStyle,\n  sizes,\n  defaultProps\n};\n//# sourceMappingURL=avatar.js.map"]},"metadata":{},"sourceType":"module"}