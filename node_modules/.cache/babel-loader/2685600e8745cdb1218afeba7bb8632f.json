{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { useBoolean, useCallbackRef, useControllableState, useDimensions, useIds, useLatestRef, usePanGesture, usePrevious, useUpdateEffect } from \"@chakra-ui/hooks\";\nimport { mergeRefs } from \"@chakra-ui/react-utils\";\nimport { ariaAttr, callAllHandlers, clampValue, dataAttr, focus, getBox, normalizeEventKey, percentToValue, roundValueToStep, valueToPercent } from \"@chakra-ui/utils\";\nimport { useCallback, useMemo, useRef } from \"react\";\nimport { getPartsStyle } from \"./slider-utils\";\n/**\n * React hook that implements an accessible range slider.\n *\n * It is an alternative to `<input type=\"range\" />`, and returns\n * prop getters for the component parts\n *\n * @see Docs     https://chakra-ui.com/docs/form/slider\n * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.1/#slider\n */\n\nexport function useSlider(props) {\n  var _getAriaValueText;\n\n  var {\n    min = 0,\n    max = 100,\n    onChange,\n    value: valueProp,\n    defaultValue,\n    isReversed,\n    orientation = \"horizontal\",\n    id: idProp,\n    isDisabled,\n    isReadOnly,\n    onChangeStart: onChangeStartProp,\n    onChangeEnd: onChangeEndProp,\n    step = 1,\n    getAriaValueText: getAriaValueTextProp,\n    \"aria-valuetext\": ariaValueText,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    name,\n    focusThumbOnChange = true\n  } = props,\n      htmlProps = _objectWithoutPropertiesLoose(props, [\"min\", \"max\", \"onChange\", \"value\", \"defaultValue\", \"isReversed\", \"orientation\", \"id\", \"isDisabled\", \"isReadOnly\", \"onChangeStart\", \"onChangeEnd\", \"step\", \"getAriaValueText\", \"aria-valuetext\", \"aria-label\", \"aria-labelledby\", \"name\", \"focusThumbOnChange\"]);\n\n  var onChangeStart = useCallbackRef(onChangeStartProp);\n  var onChangeEnd = useCallbackRef(onChangeEndProp);\n  var getAriaValueText = useCallbackRef(getAriaValueTextProp);\n  /**\n   * Enable the slider handle controlled and uncontrolled scenarios\n   */\n\n  var [computedValue, setValue] = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue != null ? defaultValue : getDefaultValue(min, max),\n    onChange\n  });\n  var [isDragging, setDragging] = useBoolean();\n  var prevIsDragging = usePrevious(isDragging);\n  var [isFocused, setFocused] = useBoolean();\n  var eventSourceRef = useRef(null);\n  var isInteractive = !(isDisabled || isReadOnly);\n  /**\n   * Constrain the value because it can't be less than min\n   * or greater than max\n   */\n\n  var value = clampValue(computedValue, min, max);\n  var valueRef = useLatestRef(value);\n  var prevRef = useRef(valueRef.current);\n  var reversedValue = max - value + min;\n  var trackValue = isReversed ? reversedValue : value;\n  var trackPercent = valueToPercent(trackValue, min, max);\n  var isVertical = orientation === \"vertical\";\n  /**\n   * Let's keep a reference to the slider track and thumb\n   */\n\n  var trackRef = useRef(null);\n  var thumbRef = useRef(null);\n  var rootRef = useRef(null);\n  /**\n   * Generate unique ids for component parts\n   */\n\n  var [thumbId, trackId] = useIds(idProp, \"slider-thumb\", \"slider-track\");\n  /**\n   * Get relative value of slider from the event by tracking\n   * how far you clicked within the track to determine the value\n   *\n   * @todo - Refactor this later on to use info from pan session\n   */\n\n  var getValueFromPointer = useCallback(event => {\n    var _event$touches$, _event$touches;\n\n    if (!trackRef.current) return;\n    eventSourceRef.current = \"pointer\";\n    var trackRect = getBox(trackRef.current).borderBox;\n    var {\n      clientX,\n      clientY\n    } = (_event$touches$ = (_event$touches = event.touches) == null ? void 0 : _event$touches[0]) != null ? _event$touches$ : event;\n    var diff = isVertical ? trackRect.bottom - clientY : clientX - trackRect.left;\n    var length = isVertical ? trackRect.height : trackRect.width;\n    var percent = diff / length;\n\n    if (isReversed) {\n      percent = 1 - percent;\n    }\n\n    var nextValue = percentToValue(percent, min, max);\n\n    if (step) {\n      nextValue = parseFloat(roundValueToStep(nextValue, min, step));\n    }\n\n    nextValue = clampValue(nextValue, min, max);\n    return nextValue;\n  }, [isVertical, isReversed, max, min, step]);\n  var tenSteps = (max - min) / 10;\n  var oneStep = step || (max - min) / 100;\n  var constrain = useCallback(value => {\n    if (!isInteractive) return;\n    value = parseFloat(roundValueToStep(value, min, oneStep));\n    value = clampValue(value, min, max);\n    setValue(value);\n  }, [oneStep, max, min, setValue, isInteractive]);\n  var actions = useMemo(() => ({\n    stepUp: function stepUp(step) {\n      if (step === void 0) {\n        step = oneStep;\n      }\n\n      var next = isReversed ? value - step : value + step;\n      constrain(next);\n    },\n    stepDown: function stepDown(step) {\n      if (step === void 0) {\n        step = oneStep;\n      }\n\n      var next = isReversed ? value + step : value - step;\n      constrain(next);\n    },\n    reset: () => constrain(defaultValue || 0),\n    stepTo: value => constrain(value)\n  }), [constrain, isReversed, value, oneStep, defaultValue]);\n  /**\n   * Keyboard interaction to ensure users can operate\n   * the slider using only their keyboard.\n   */\n\n  var onKeyDown = useCallback(event => {\n    var eventKey = normalizeEventKey(event);\n    var keyMap = {\n      ArrowRight: () => actions.stepUp(),\n      ArrowUp: () => actions.stepUp(),\n      ArrowLeft: () => actions.stepDown(),\n      ArrowDown: () => actions.stepDown(),\n      PageUp: () => actions.stepUp(tenSteps),\n      PageDown: () => actions.stepDown(tenSteps),\n      Home: () => constrain(min),\n      End: () => constrain(max)\n    };\n    var action = keyMap[eventKey];\n\n    if (action) {\n      event.preventDefault();\n      event.stopPropagation();\n      action(event);\n      eventSourceRef.current = \"keyboard\";\n    }\n  }, [actions, constrain, max, min, tenSteps]);\n  /**\n   * ARIA (Optional): To define a human readable representation of the value,\n   * we allow users pass aria-valuetext.\n   */\n\n  var valueText = (_getAriaValueText = getAriaValueText == null ? void 0 : getAriaValueText(value)) != null ? _getAriaValueText : ariaValueText;\n  /**\n   * Measure the dimensions of the thumb so\n   * we can center it within the track properly\n   */\n\n  var thumbBoxModel = useDimensions(thumbRef);\n  /**\n   * Compute styles for all component parts.\n   */\n\n  var {\n    thumbStyle,\n    rootStyle,\n    trackStyle,\n    innerTrackStyle\n  } = useMemo(() => {\n    var _thumbBoxModel$border;\n\n    var thumbRect = (_thumbBoxModel$border = thumbBoxModel == null ? void 0 : thumbBoxModel.borderBox) != null ? _thumbBoxModel$border : {\n      width: 0,\n      height: 0\n    };\n    return getPartsStyle({\n      isReversed,\n      orientation,\n      thumbRect,\n      trackPercent\n    });\n  }, [isReversed, orientation, thumbBoxModel == null ? void 0 : thumbBoxModel.borderBox, trackPercent]);\n  var focusThumb = useCallback(() => {\n    if (thumbRef.current && focusThumbOnChange) {\n      setTimeout(() => focus(thumbRef.current));\n    }\n  }, [focusThumbOnChange]);\n  useUpdateEffect(() => {\n    focusThumb();\n\n    if (eventSourceRef.current === \"keyboard\") {\n      onChangeEndProp == null ? void 0 : onChangeEndProp(valueRef.current);\n    }\n  }, [value, onChangeEndProp]);\n\n  var setValueFromPointer = event => {\n    var nextValue = getValueFromPointer(event);\n\n    if (nextValue != null && nextValue !== valueRef.current) {\n      setValue(nextValue);\n    }\n  };\n\n  usePanGesture(rootRef, {\n    onPanSessionStart(event) {\n      if (!isInteractive) return;\n      setValueFromPointer(event);\n    },\n\n    onPanSessionEnd() {\n      if (!isInteractive) return;\n\n      if (!prevIsDragging && prevRef.current !== valueRef.current) {\n        onChangeEnd == null ? void 0 : onChangeEnd(valueRef.current);\n        prevRef.current = valueRef.current;\n      }\n    },\n\n    onPanStart() {\n      if (!isInteractive) return;\n      setDragging.on();\n      onChangeStart == null ? void 0 : onChangeStart(valueRef.current);\n    },\n\n    onPan(event) {\n      if (!isInteractive) return;\n      setValueFromPointer(event);\n    },\n\n    onPanEnd() {\n      if (!isInteractive) return;\n      setDragging.off();\n      onChangeEnd == null ? void 0 : onChangeEnd(valueRef.current);\n    }\n\n  });\n  var getRootProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({}, props, htmlProps, {\n      ref: mergeRefs(ref, rootRef),\n      tabIndex: -1,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      \"data-focused\": dataAttr(isFocused),\n      style: _extends({}, props.style, rootStyle)\n    });\n  }, [htmlProps, isDisabled, isFocused, rootStyle]);\n  var getTrackProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({}, props, {\n      ref: mergeRefs(ref, trackRef),\n      id: trackId,\n      \"data-disabled\": dataAttr(isDisabled),\n      style: _extends({}, props.style, trackStyle)\n    });\n  }, [isDisabled, trackId, trackStyle]);\n  var getInnerTrackProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({}, props, {\n      ref,\n      style: _extends({}, props.style, innerTrackStyle)\n    });\n  }, [innerTrackStyle]);\n  var getThumbProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({}, props, {\n      ref: mergeRefs(ref, thumbRef),\n      role: \"slider\",\n      tabIndex: isInteractive ? 0 : undefined,\n      id: thumbId,\n      \"data-active\": dataAttr(isDragging),\n      \"aria-valuetext\": valueText,\n      \"aria-valuemin\": min,\n      \"aria-valuemax\": max,\n      \"aria-valuenow\": value,\n      \"aria-orientation\": orientation,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      \"aria-readonly\": ariaAttr(isReadOnly),\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabel ? undefined : ariaLabelledBy,\n      style: _extends({}, props.style, thumbStyle),\n      onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n      onFocus: callAllHandlers(props.onFocus, setFocused.on),\n      onBlur: callAllHandlers(props.onBlur, setFocused.off)\n    });\n  }, [ariaLabel, ariaLabelledBy, isDisabled, isDragging, isReadOnly, isInteractive, max, min, onKeyDown, orientation, setFocused.off, setFocused.on, thumbId, thumbStyle, value, valueText]);\n  var getMarkerProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    var isInRange = !(props.value < min || props.value > max);\n    var isHighlighted = value >= props.value;\n    var markerPercent = valueToPercent(props.value, min, max);\n\n    var markerStyle = _extends({\n      position: \"absolute\",\n      pointerEvents: \"none\"\n    }, orient({\n      orientation,\n      vertical: {\n        bottom: isReversed ? 100 - markerPercent + \"%\" : markerPercent + \"%\"\n      },\n      horizontal: {\n        left: isReversed ? 100 - markerPercent + \"%\" : markerPercent + \"%\"\n      }\n    }));\n\n    return _extends({}, props, {\n      ref,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(!isInRange),\n      \"data-highlighted\": dataAttr(isHighlighted),\n      style: _extends({}, props.style, markerStyle)\n    });\n  }, [isDisabled, isReversed, max, min, orientation, value]);\n  var getInputProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({}, props, {\n      ref,\n      type: \"hidden\",\n      value,\n      name\n    });\n  }, [name, value]);\n  return {\n    state: {\n      value,\n      isFocused,\n      isDragging\n    },\n    actions,\n    getRootProps,\n    getTrackProps,\n    getInnerTrackProps,\n    getThumbProps,\n    getMarkerProps,\n    getInputProps\n  };\n}\n\nfunction orient(options) {\n  var {\n    orientation,\n    vertical,\n    horizontal\n  } = options;\n  return orientation === \"vertical\" ? vertical : horizontal;\n}\n/**\n * The browser <input type=\"range\" /> calculates\n * the default value of a slider by using mid-point\n * between the min and the max.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/range\n */\n\n\nfunction getDefaultValue(min, max) {\n  return max < min ? min : min + (max - min) / 2;\n}","map":{"version":3,"sources":["/Users/arifrahman/Code/personal/minting-token/client/node_modules/@chakra-ui/slider/dist/esm/use-slider.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","useBoolean","useCallbackRef","useControllableState","useDimensions","useIds","useLatestRef","usePanGesture","usePrevious","useUpdateEffect","mergeRefs","ariaAttr","callAllHandlers","clampValue","dataAttr","focus","getBox","normalizeEventKey","percentToValue","roundValueToStep","valueToPercent","useCallback","useMemo","useRef","getPartsStyle","useSlider","props","_getAriaValueText","min","max","onChange","value","valueProp","defaultValue","isReversed","orientation","id","idProp","isDisabled","isReadOnly","onChangeStart","onChangeStartProp","onChangeEnd","onChangeEndProp","step","getAriaValueText","getAriaValueTextProp","ariaValueText","ariaLabel","ariaLabelledBy","name","focusThumbOnChange","htmlProps","computedValue","setValue","getDefaultValue","isDragging","setDragging","prevIsDragging","isFocused","setFocused","eventSourceRef","isInteractive","valueRef","prevRef","current","reversedValue","trackValue","trackPercent","isVertical","trackRef","thumbRef","rootRef","thumbId","trackId","getValueFromPointer","event","_event$touches$","_event$touches","trackRect","borderBox","clientX","clientY","touches","diff","bottom","left","height","width","percent","nextValue","parseFloat","tenSteps","oneStep","constrain","actions","stepUp","next","stepDown","reset","stepTo","onKeyDown","eventKey","keyMap","ArrowRight","ArrowUp","ArrowLeft","ArrowDown","PageUp","PageDown","Home","End","action","preventDefault","stopPropagation","valueText","thumbBoxModel","thumbStyle","rootStyle","trackStyle","innerTrackStyle","_thumbBoxModel$border","thumbRect","focusThumb","setTimeout","setValueFromPointer","onPanSessionStart","onPanSessionEnd","onPanStart","on","onPan","onPanEnd","off","getRootProps","ref","tabIndex","style","getTrackProps","getInnerTrackProps","getThumbProps","role","undefined","onFocus","onBlur","getMarkerProps","isInRange","isHighlighted","markerPercent","markerStyle","position","pointerEvents","orient","vertical","horizontal","getInputProps","type","state","options"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useBoolean, useCallbackRef, useControllableState, useDimensions, useIds, useLatestRef, usePanGesture, usePrevious, useUpdateEffect } from \"@chakra-ui/hooks\";\nimport { mergeRefs } from \"@chakra-ui/react-utils\";\nimport { ariaAttr, callAllHandlers, clampValue, dataAttr, focus, getBox, normalizeEventKey, percentToValue, roundValueToStep, valueToPercent } from \"@chakra-ui/utils\";\nimport { useCallback, useMemo, useRef } from \"react\";\nimport { getPartsStyle } from \"./slider-utils\";\n\n/**\n * React hook that implements an accessible range slider.\n *\n * It is an alternative to `<input type=\"range\" />`, and returns\n * prop getters for the component parts\n *\n * @see Docs     https://chakra-ui.com/docs/form/slider\n * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.1/#slider\n */\nexport function useSlider(props) {\n  var _getAriaValueText;\n\n  var {\n    min = 0,\n    max = 100,\n    onChange,\n    value: valueProp,\n    defaultValue,\n    isReversed,\n    orientation = \"horizontal\",\n    id: idProp,\n    isDisabled,\n    isReadOnly,\n    onChangeStart: onChangeStartProp,\n    onChangeEnd: onChangeEndProp,\n    step = 1,\n    getAriaValueText: getAriaValueTextProp,\n    \"aria-valuetext\": ariaValueText,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    name,\n    focusThumbOnChange = true\n  } = props,\n      htmlProps = _objectWithoutPropertiesLoose(props, [\"min\", \"max\", \"onChange\", \"value\", \"defaultValue\", \"isReversed\", \"orientation\", \"id\", \"isDisabled\", \"isReadOnly\", \"onChangeStart\", \"onChangeEnd\", \"step\", \"getAriaValueText\", \"aria-valuetext\", \"aria-label\", \"aria-labelledby\", \"name\", \"focusThumbOnChange\"]);\n\n  var onChangeStart = useCallbackRef(onChangeStartProp);\n  var onChangeEnd = useCallbackRef(onChangeEndProp);\n  var getAriaValueText = useCallbackRef(getAriaValueTextProp);\n  /**\n   * Enable the slider handle controlled and uncontrolled scenarios\n   */\n\n  var [computedValue, setValue] = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue != null ? defaultValue : getDefaultValue(min, max),\n    onChange\n  });\n  var [isDragging, setDragging] = useBoolean();\n  var prevIsDragging = usePrevious(isDragging);\n  var [isFocused, setFocused] = useBoolean();\n  var eventSourceRef = useRef(null);\n  var isInteractive = !(isDisabled || isReadOnly);\n  /**\n   * Constrain the value because it can't be less than min\n   * or greater than max\n   */\n\n  var value = clampValue(computedValue, min, max);\n  var valueRef = useLatestRef(value);\n  var prevRef = useRef(valueRef.current);\n  var reversedValue = max - value + min;\n  var trackValue = isReversed ? reversedValue : value;\n  var trackPercent = valueToPercent(trackValue, min, max);\n  var isVertical = orientation === \"vertical\";\n  /**\n   * Let's keep a reference to the slider track and thumb\n   */\n\n  var trackRef = useRef(null);\n  var thumbRef = useRef(null);\n  var rootRef = useRef(null);\n  /**\n   * Generate unique ids for component parts\n   */\n\n  var [thumbId, trackId] = useIds(idProp, \"slider-thumb\", \"slider-track\");\n  /**\n   * Get relative value of slider from the event by tracking\n   * how far you clicked within the track to determine the value\n   *\n   * @todo - Refactor this later on to use info from pan session\n   */\n\n  var getValueFromPointer = useCallback(event => {\n    var _event$touches$, _event$touches;\n\n    if (!trackRef.current) return;\n    eventSourceRef.current = \"pointer\";\n    var trackRect = getBox(trackRef.current).borderBox;\n    var {\n      clientX,\n      clientY\n    } = (_event$touches$ = (_event$touches = event.touches) == null ? void 0 : _event$touches[0]) != null ? _event$touches$ : event;\n    var diff = isVertical ? trackRect.bottom - clientY : clientX - trackRect.left;\n    var length = isVertical ? trackRect.height : trackRect.width;\n    var percent = diff / length;\n\n    if (isReversed) {\n      percent = 1 - percent;\n    }\n\n    var nextValue = percentToValue(percent, min, max);\n\n    if (step) {\n      nextValue = parseFloat(roundValueToStep(nextValue, min, step));\n    }\n\n    nextValue = clampValue(nextValue, min, max);\n    return nextValue;\n  }, [isVertical, isReversed, max, min, step]);\n  var tenSteps = (max - min) / 10;\n  var oneStep = step || (max - min) / 100;\n  var constrain = useCallback(value => {\n    if (!isInteractive) return;\n    value = parseFloat(roundValueToStep(value, min, oneStep));\n    value = clampValue(value, min, max);\n    setValue(value);\n  }, [oneStep, max, min, setValue, isInteractive]);\n  var actions = useMemo(() => ({\n    stepUp: function stepUp(step) {\n      if (step === void 0) {\n        step = oneStep;\n      }\n\n      var next = isReversed ? value - step : value + step;\n      constrain(next);\n    },\n    stepDown: function stepDown(step) {\n      if (step === void 0) {\n        step = oneStep;\n      }\n\n      var next = isReversed ? value + step : value - step;\n      constrain(next);\n    },\n    reset: () => constrain(defaultValue || 0),\n    stepTo: value => constrain(value)\n  }), [constrain, isReversed, value, oneStep, defaultValue]);\n  /**\n   * Keyboard interaction to ensure users can operate\n   * the slider using only their keyboard.\n   */\n\n  var onKeyDown = useCallback(event => {\n    var eventKey = normalizeEventKey(event);\n    var keyMap = {\n      ArrowRight: () => actions.stepUp(),\n      ArrowUp: () => actions.stepUp(),\n      ArrowLeft: () => actions.stepDown(),\n      ArrowDown: () => actions.stepDown(),\n      PageUp: () => actions.stepUp(tenSteps),\n      PageDown: () => actions.stepDown(tenSteps),\n      Home: () => constrain(min),\n      End: () => constrain(max)\n    };\n    var action = keyMap[eventKey];\n\n    if (action) {\n      event.preventDefault();\n      event.stopPropagation();\n      action(event);\n      eventSourceRef.current = \"keyboard\";\n    }\n  }, [actions, constrain, max, min, tenSteps]);\n  /**\n   * ARIA (Optional): To define a human readable representation of the value,\n   * we allow users pass aria-valuetext.\n   */\n\n  var valueText = (_getAriaValueText = getAriaValueText == null ? void 0 : getAriaValueText(value)) != null ? _getAriaValueText : ariaValueText;\n  /**\n   * Measure the dimensions of the thumb so\n   * we can center it within the track properly\n   */\n\n  var thumbBoxModel = useDimensions(thumbRef);\n  /**\n   * Compute styles for all component parts.\n   */\n\n  var {\n    thumbStyle,\n    rootStyle,\n    trackStyle,\n    innerTrackStyle\n  } = useMemo(() => {\n    var _thumbBoxModel$border;\n\n    var thumbRect = (_thumbBoxModel$border = thumbBoxModel == null ? void 0 : thumbBoxModel.borderBox) != null ? _thumbBoxModel$border : {\n      width: 0,\n      height: 0\n    };\n    return getPartsStyle({\n      isReversed,\n      orientation,\n      thumbRect,\n      trackPercent\n    });\n  }, [isReversed, orientation, thumbBoxModel == null ? void 0 : thumbBoxModel.borderBox, trackPercent]);\n  var focusThumb = useCallback(() => {\n    if (thumbRef.current && focusThumbOnChange) {\n      setTimeout(() => focus(thumbRef.current));\n    }\n  }, [focusThumbOnChange]);\n  useUpdateEffect(() => {\n    focusThumb();\n\n    if (eventSourceRef.current === \"keyboard\") {\n      onChangeEndProp == null ? void 0 : onChangeEndProp(valueRef.current);\n    }\n  }, [value, onChangeEndProp]);\n\n  var setValueFromPointer = event => {\n    var nextValue = getValueFromPointer(event);\n\n    if (nextValue != null && nextValue !== valueRef.current) {\n      setValue(nextValue);\n    }\n  };\n\n  usePanGesture(rootRef, {\n    onPanSessionStart(event) {\n      if (!isInteractive) return;\n      setValueFromPointer(event);\n    },\n\n    onPanSessionEnd() {\n      if (!isInteractive) return;\n\n      if (!prevIsDragging && prevRef.current !== valueRef.current) {\n        onChangeEnd == null ? void 0 : onChangeEnd(valueRef.current);\n        prevRef.current = valueRef.current;\n      }\n    },\n\n    onPanStart() {\n      if (!isInteractive) return;\n      setDragging.on();\n      onChangeStart == null ? void 0 : onChangeStart(valueRef.current);\n    },\n\n    onPan(event) {\n      if (!isInteractive) return;\n      setValueFromPointer(event);\n    },\n\n    onPanEnd() {\n      if (!isInteractive) return;\n      setDragging.off();\n      onChangeEnd == null ? void 0 : onChangeEnd(valueRef.current);\n    }\n\n  });\n  var getRootProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({}, props, htmlProps, {\n      ref: mergeRefs(ref, rootRef),\n      tabIndex: -1,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      \"data-focused\": dataAttr(isFocused),\n      style: _extends({}, props.style, rootStyle)\n    });\n  }, [htmlProps, isDisabled, isFocused, rootStyle]);\n  var getTrackProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({}, props, {\n      ref: mergeRefs(ref, trackRef),\n      id: trackId,\n      \"data-disabled\": dataAttr(isDisabled),\n      style: _extends({}, props.style, trackStyle)\n    });\n  }, [isDisabled, trackId, trackStyle]);\n  var getInnerTrackProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({}, props, {\n      ref,\n      style: _extends({}, props.style, innerTrackStyle)\n    });\n  }, [innerTrackStyle]);\n  var getThumbProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({}, props, {\n      ref: mergeRefs(ref, thumbRef),\n      role: \"slider\",\n      tabIndex: isInteractive ? 0 : undefined,\n      id: thumbId,\n      \"data-active\": dataAttr(isDragging),\n      \"aria-valuetext\": valueText,\n      \"aria-valuemin\": min,\n      \"aria-valuemax\": max,\n      \"aria-valuenow\": value,\n      \"aria-orientation\": orientation,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      \"aria-readonly\": ariaAttr(isReadOnly),\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabel ? undefined : ariaLabelledBy,\n      style: _extends({}, props.style, thumbStyle),\n      onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n      onFocus: callAllHandlers(props.onFocus, setFocused.on),\n      onBlur: callAllHandlers(props.onBlur, setFocused.off)\n    });\n  }, [ariaLabel, ariaLabelledBy, isDisabled, isDragging, isReadOnly, isInteractive, max, min, onKeyDown, orientation, setFocused.off, setFocused.on, thumbId, thumbStyle, value, valueText]);\n  var getMarkerProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    var isInRange = !(props.value < min || props.value > max);\n    var isHighlighted = value >= props.value;\n    var markerPercent = valueToPercent(props.value, min, max);\n\n    var markerStyle = _extends({\n      position: \"absolute\",\n      pointerEvents: \"none\"\n    }, orient({\n      orientation,\n      vertical: {\n        bottom: isReversed ? 100 - markerPercent + \"%\" : markerPercent + \"%\"\n      },\n      horizontal: {\n        left: isReversed ? 100 - markerPercent + \"%\" : markerPercent + \"%\"\n      }\n    }));\n\n    return _extends({}, props, {\n      ref,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(!isInRange),\n      \"data-highlighted\": dataAttr(isHighlighted),\n      style: _extends({}, props.style, markerStyle)\n    });\n  }, [isDisabled, isReversed, max, min, orientation, value]);\n  var getInputProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({}, props, {\n      ref,\n      type: \"hidden\",\n      value,\n      name\n    });\n  }, [name, value]);\n  return {\n    state: {\n      value,\n      isFocused,\n      isDragging\n    },\n    actions,\n    getRootProps,\n    getTrackProps,\n    getInnerTrackProps,\n    getThumbProps,\n    getMarkerProps,\n    getInputProps\n  };\n}\n\nfunction orient(options) {\n  var {\n    orientation,\n    vertical,\n    horizontal\n  } = options;\n  return orientation === \"vertical\" ? vertical : horizontal;\n}\n/**\n * The browser <input type=\"range\" /> calculates\n * the default value of a slider by using mid-point\n * between the min and the max.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/range\n */\n\n\nfunction getDefaultValue(min, max) {\n  return max < min ? min : min + (max - min) / 2;\n}\n//# sourceMappingURL=use-slider.js.map"]},"metadata":{},"sourceType":"module"}